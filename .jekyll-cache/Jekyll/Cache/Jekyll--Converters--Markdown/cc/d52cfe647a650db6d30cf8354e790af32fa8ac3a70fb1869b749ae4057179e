I")<h2 id="01-시간-복잡도time-complexity란">01. 시간 복잡도(Time Complexity)란?</h2>
<ul>
  <li>입력 길이의 함수로 알고리즘을 실행하는 데 걸리는 시간</li>
  <li>알고리즘에서 각 코드 명령문을 실행하는 데 걸리는 시간 (알고리즘의 총 실행 시간 x)</li>
  <li>알고리즘의 연산 횟수(증가 또는 감소)가 발생할 때 실행 시간의 변화(증가 또는 감소)에 대한 정보를 제공한다.</li>
  <li><strong>알고리즘이 입력 길이의 함수로 실행하는 데 걸리는 시간을 수량화한다.</strong></li>
</ul>

<h2 id="02-시간-복잡도가-중요한-이유">02. 시간 복잡도가 중요한 이유</h2>
<p>정의에 따라 알고리즘을 실행하거나 특정 작업을 수행하기 위해 컴퓨터에 제공되어야 하는 일련의 정의된 명령이 필요하다.<br />
이러한 명령어가 정의되면서 변형이 있을 수 있고 동일한 작업을 수행하기 위해 특정 명령 집합을 정의할 수도 있다. 또한 사용 가능한 프로그래밍 언어 중 하나를 선택할 수 있는 옵션을 통해 명령어는 선택한 프로그래밍 언어의 성능 경계와 함께 모든 형태의 구문을 사용할 수 있다. <br />
다양한 요소가 실행 중인 알고리즘의 결과에 영향을 미칠 수 있으므로 우리는 이러한 프로그램이 작업을 수행하는 데 얼마나 효율적으로 사용되는지 이해해야 하며 이를 위해서는 알고리즘의 공간 및 시간 복잡도를 모두 고려해야 한다.</p>
:ET