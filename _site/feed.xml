<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="https://woojinjeonkr.github.io//feed.xml" rel="self" type="application/atom+xml" /><link href="https://woojinjeonkr.github.io//" rel="alternate" type="text/html" /><updated>2022-10-03T16:12:15+09:00</updated><id>https://woojinjeonkr.github.io//feed.xml</id><title type="html">Woojin’s DevPocket</title><subtitle>
Woojin's DevPocket Success is the sum of small efforts, repeated day in and day out. -Robert Collier</subtitle><author><name>WoojinJeon</name></author><entry><title type="html">jekyll youtube plugin</title><link href="https://woojinjeonkr.github.io//skill/2022/10/03/jekyll-youtube-plugin.html" rel="alternate" type="text/html" title="jekyll youtube plugin" /><published>2022-10-03T00:00:00+09:00</published><updated>2022-10-03T00:00:00+09:00</updated><id>https://woojinjeonkr.github.io//skill/2022/10/03/jekyll-youtube-plugin</id><content type="html" xml:base="https://woojinjeonkr.github.io//skill/2022/10/03/jekyll-youtube-plugin.html"><![CDATA[<h2 id="1-jekyll-youtube">1. jekyll-youtube</h2>
<p>jekyll-youtube plugin은 Youtube URL을 사용하고 사이트에 비디오를 임베드하기 위해 반응형 html 스니펫을 생성하는 태그를 제공한다.</p>

<h2 id="2-jekyll-youtube-설치하기">2. jekyll-youtube 설치하기</h2>
<h3 id="01-1-gemfile에-작성-후-명령어-실행하기">01-1. gemfile에 작성 후 명령어 실행하기</h3>

<p>gemfile에 다음과 같이 작성한다.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>group :jekyll_plugins do
  gem "jekyll-youtube"
end
</code></pre></div></div>

<p>작성을 완료했다면 터미널을 열고 다음 명령어를 작성 후 실행한다. (명령어 작성 후 Enter)</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bundle
</code></pre></div></div>

<h3 id="01-2-터미널에-직접-설치-명령어-작성하기">01-2. 터미널에 직접 설치 명령어 작성하기</h3>

<p>터미널을 열고 다음 명령어를 작성 후 실행한다. (명령어 작성 후 Enter)</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gem install jekyll-youtube
</code></pre></div></div>

<h3 id="02-_configyml-파일에서-plugin-부분에-다음과-같이-추가한다">02. _config.yml 파일에서 plugin 부분에 다음과 같이 추가한다.</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>plugins: [jekyll-youtube]
</code></pre></div></div>

<h2 id="3-jekyll-youtube를-사용하여-동영상-사용하기">3. jekyll-youtube를 사용하여 동영상 사용하기</h2>

<div class="language-md highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
{% youtube "https://youtu.be/skuCUdRGA4c" %}

</code></pre></div></div>
<p>와 같이 작성한 뒤 실행하면 페이지 소스에는 다음과 같이 표시되며</p>

<div class="language-md highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;style&gt;</span>.embed-container { position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden; max-width: 100%; } .embed-container iframe, .embed-container object, .embed-container embed { position: absolute; top: 0; left: 0; width: 100%; height: 100%; }<span class="nt">&lt;/style&gt;&lt;div</span> <span class="na">class=</span><span class="s">'embed-container'</span><span class="nt">&gt;</span>    <span class="nt">&lt;iframe</span> <span class="na">title=</span><span class="s">"YouTube video player"</span> <span class="na">width=</span><span class="s">"640"</span> <span class="na">height=</span><span class="s">"390"</span> <span class="na">src=</span><span class="s">"//www.youtube.com/embed/skuCUdRGA4c"</span> <span class="na">frameborder=</span><span class="s">"0"</span> <span class="na">allowfullscreen</span><span class="nt">&gt;&lt;/iframe&gt;&lt;/div&gt;</span>
</code></pre></div></div>
<p>아래와 같은 동영상이 나오게 된다.</p>

<style>.embed-container { position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden; max-width: 100%; } .embed-container iframe, .embed-container object, .embed-container embed { position: absolute; top: 0; left: 0; width: 100%; height: 100%; }</style>
<div class="embed-container">    <iframe title="YouTube video player" width="640" height="390" src="//www.youtube.com/embed/skuCUdRGA4c" frameborder="0" allowfullscreen=""></iframe></div>

<h2 id="3-jekyll-yat-theme에서-동영상-삽입하기">3. jekyll yat theme에서 동영상 삽입하기</h2>

<div class="language-md highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">![](</span><span class="sx">//www.youtu.be/kvHUXPzxTAw</span><span class="p">)</span>
</code></pre></div></div>
<p>와 같이 작성하면 다음과 같은 동영상이 나오게 된다.</p>

<p><img src="//www.youtu.be/kvHUXPzxTAw" alt="" /></p>

<p>jekyll yat theme를 사용하면 jekyll-youtube plugin을 따로 설치하지 않아도 동영상을 삽입하는데 어려움이 없다.</p>

<h2 id="4-참고-자료">4. 참고 자료</h2>
<ul>
  <li><a href="https://github.com/dommmel/jekyll-youtube">Jekyll Youtube</a></li>
  <li><a href="https://github.com/jeffreytse/jekyll-theme-yat">JEKYLL YAT THEME</a></li>
</ul>]]></content><author><name>WoojinJeon</name></author><category term="Skill" /><category term="Skill" /><category term="jekyll" /><category term="plugin" /><category term="jekyll-youtube" /><category term="jekyll-theme-yat" /><summary type="html"><![CDATA[1. jekyll-youtube jekyll-youtube plugin은 Youtube URL을 사용하고 사이트에 비디오를 임베드하기 위해 반응형 html 스니펫을 생성하는 태그를 제공한다.]]></summary></entry><entry><title type="html">Open Graph</title><link href="https://woojinjeonkr.github.io//skill/2022/10/02/Open-Graph.html" rel="alternate" type="text/html" title="Open Graph" /><published>2022-10-02T00:00:00+09:00</published><updated>2022-10-02T00:00:00+09:00</updated><id>https://woojinjeonkr.github.io//skill/2022/10/02/Open-Graph</id><content type="html" xml:base="https://woojinjeonkr.github.io//skill/2022/10/02/Open-Graph.html"><![CDATA[<h2 id="1-open-graph">1. Open Graph</h2>
<p>Open Graph는 원래 Facebook에서 페이지 콘텐츠를 표현하는 것을 목적으로 웹 페이지 내 메타데이터 사용을 표준화하기 위해 만든 인터넷 프로토콜이다.<br />페이지 제목처럼 간단하거나 동영상 길이만큼 구체적인 세부 정보를 제공할 수 있다.<br /></p>

<h2 id="2-open-graph가-필요한-이유">2. Open Graph가 필요한 이유</h2>
<p>인터넷의 콘텐츠는 일반적으로 다른 사람과 공유한다는 하나 이상의 목표를 염두에 두고 만들어진다.<br />친구 1명에게만 보내는 경우가 아닌 여러 사람에게 공유하고 싶거나 미리보기를 사용하는 소셜 네트워크나 앱에서 공유하려는 경우 Open Graph를 사용하므로써 내용을 상대방에게 미리 보여줄 수 있다.<br />대부분의 소셜 미디어 플랫폼에서는 오픈 그래프 태그가 없어도 title과 description 정도는 미리보기로 표시해주지만 이는 실제 페이지의 콘텐츠 내용과 다를 수 있고, 그것만으로는 이 페이지가 어떤 정보를 보여줄지 사용자가 예상하기 어렵다. 소셜 미디어의 급성장으로는 최근에는 많은 웹사이트들이 og 태그를 사용하고 있는데, 만약 공유받은 웹사이트의 미리보기에 썸네일도 없고 페이지 title만 있는 경우 사용자 입장에서는 클릭해도 괜찮은 페이지인지 망설여지게 될 수 있다.<br /></p>

<h2 id="3-open-graph-태그">3. Open Graph 태그</h2>

<h3 id="01-기본-태그">01. 기본 태그</h3>
<ol>
  <li><b>og:title</b> : 사이트의 제목 태그</li>
  <li><b>og:type</b> :  사이트의 종류 스타일 ex) video, movie</li>
  <li><b>og:image</b> : 사이트를 나타낼 대표 이미지</li>
  <li><b>og:url</b> : 사이트의 대표 url</li>
</ol>

<h3 id="02-옵션-태그">02. 옵션 태그</h3>
<ol>
  <li><b>og:audio</b> : 사이트에 포함되는 오디오 파일 url</li>
  <li><b>og:description</b> : 사이트 설명</li>
  <li><b>og:locale</b> : 사이트 언어 선택 ex) 한글: ko_KR</li>
  <li><b>og:locale:alternate</b> : 사이트의 다른 언어 종류 (다국적 사이트인 경우 적용)</li>
  <li><b>og:site_name</b> : 전체 사이트의 제목이 <b>og:title</b>이라면 <b>og:site_name</b>은 좀 더 세부적인 카테고리의 제목을 의미한다.</li>
  <li><b>og:video</b> : 사이트에 포함되는 비디오 파일 url</li>
</ol>

<h3 id="03-구조-프로퍼티">03. 구조 프로퍼티</h3>
<p>여기서 ‘object’는 image, video, audio와 같은 태그를 의미한다.<br /></p>
<ol>
  <li><b>og:’object’:url</b> : object의 경로</li>
  <li><b>og:’object’:secure_url</b> : SSL(HTTPS)의 경로</li>
  <li><b>og:’object’:type</b> : object 타입의 종류</li>
  <li><b>og:’object’:width</b> : object의 너비</li>
  <li><b>og:’object’:height</b> : object의 높이</li>
  <li><b>og:’object’:alt</b> : object 설명</li>
</ol>

<h2 id="4-jekyll에서-linkpreview-사용법">4. jekyll에서 linkpreview 사용법</h2>

<h3 id="01-세팅">01. 세팅</h3>

<p><a href="https://leeminjoo.github.io/jekyll-setting/2021/06/20/Git-page-link-preview.html" target="_blank" rel="noopener noreferrer">세팅 방법 보러가기</a></p>

<p>위의 글을 따라 작성해보자. 알아보기 쉽게 정리되어 있다.</p>

<h3 id="02-작성">02. 작성</h3>

<p>{% linkpreview “미리보기할 링크 주소” %}</p>

<p>와 같이 작성하면 된다.</p>

<h3 id="03-오류">03. 오류</h3>

<p>로컬에서 실행했을 때에는 잘 출력되는데 원격으로 실행해서 서버에 띄우려고 하면 build error가 뜨면서 작동되지 않았다..
다른 방법을 찾아보자..</p>

<h2 id="5-metatagsio">5. metatags.io/</h2>

<p><a href="https://metatags.io/" target="_blank" rel="noopener noreferrer">사이트 바로가기</a></p>

<p>콘텐츠를 편집하고 실험한 다음 Google, Facebook, Twitter 등에서 웹페이지가 어떻게 보일지 미리 볼 수 있는 사이트이다.<br /></p>

<h2 id="6-참고-자료">6. 참고 자료</h2>
<ul>
  <li><a href="https://www.freecodecamp.org/news/what-is-open-graph-and-how-can-i-use-it-for-my-website/">What is Open Graph and how can I use it for my website?</a></li>
  <li><a href="https://nowonbun.tistory.com/517">[HTML] Open graph  (오픈 그래피, og 태그)</a></li>
  <li><a href="https://velog.io/@byeol4001/Meta-Tag-OG%EC%98%A4%ED%94%88%EA%B7%B8%EB%9E%98%ED%94%84-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0">Meta Tag , OG(오픈그래프) 사용하기</a></li>
  <li><a href="https://github.com/ysk24ok/jekyll-linkpreview">Jekyll::Linkpreview</a></li>
  <li><a href="https://leeminjoo.github.io/jekyll-setting/2021/06/20/Git-page-link-preview.html">Jekyll 링크 미리보기 추가하기</a></li>
</ul>]]></content><author><name>WoojinJeon</name></author><category term="Skill" /><category term="Skill" /><category term="OpenGraph" /><category term="html" /><summary type="html"><![CDATA[1. Open Graph Open Graph는 원래 Facebook에서 페이지 콘텐츠를 표현하는 것을 목적으로 웹 페이지 내 메타데이터 사용을 표준화하기 위해 만든 인터넷 프로토콜이다.페이지 제목처럼 간단하거나 동영상 길이만큼 구체적인 세부 정보를 제공할 수 있다.]]></summary></entry><entry><title type="html">데이터 정규화</title><link href="https://woojinjeonkr.github.io//skill/2022/10/01/%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A0%95%EA%B7%9C%ED%99%94.html" rel="alternate" type="text/html" title="데이터 정규화" /><published>2022-10-01T00:00:00+09:00</published><updated>2022-10-01T00:00:00+09:00</updated><id>https://woojinjeonkr.github.io//skill/2022/10/01/%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A0%95%EA%B7%9C%ED%99%94</id><content type="html" xml:base="https://woojinjeonkr.github.io//skill/2022/10/01/%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A0%95%EA%B7%9C%ED%99%94.html"><![CDATA[<h2 id="1-데이터-정규화">1. 데이터 정규화</h2>
<p>데이터의 중복성을 줄이고 해당 데이터베이스를 보다 효율적으로 만들기 위해 데이터베이스의 정보를 구조화하는 것을 데이터 정규화라고 한다.<br /></p>

<h2 id="2-정규화된-데이터의-이점">2. 정규화된 데이터의 이점</h2>
<ul>
  <li>트랜잭션 쿼리 단순화: 고객 주소를 데이터베이스의 다른 위치에 여러 번 저장하거나 동일한 필드에 여러 주소를 보관하는 경우 해당 쿼리를 실행하는 시간이 오래 걸리는데에 비해 정규화된 데이터를 사용하면 고객 주소를 조회하는 쿼리는 해당 주소를 저장하는 단일 필드만 검색하면 된다.</li>
  <li>데이터베이스 크기 감소: 데이터베이스에 몇 개의 테이블만 포함되어 있는 경우에는 큰 문제가 되지 않을 수 있지만 더 큰 규모로 작업하는 경우 디스크 공간이 부족할 수 있다. 이런 경우 데이터를 정규화시키면 중복 정보가 줄어들어 로컬 서버를 실행하든 클라우드 호스팅 데이터베이스에 의존하든 스토리지 비용을 절감할 수 있다.</li>
  <li>데이터 유지 관리 편리: 데이터베이스에 여러 번 저장된 동일한 고객 데이터가 있다고 가정해보자.<br />고객이 주소를 변경할 때마다 Customer Address 필드의 모든 인스턴스에서 주소를 업데이트해야 하므로 오류가 발생할 여지가 많다. 이 경우 Customer Address 데이터가 정규화되면 orders와 같은 다른 관련 테이블에 조인되는 하나의 필드만 갖게 된다.</li>
</ul>

<h2 id="3-데이터-정규형-규칙">3. 데이터 정규형 규칙</h2>

<h3 id="01-제-1-정규형-1nf">01. 제 1 정규형 (1NF)</h3>
<p>테이블 내의 각 필드가 하나의 값만 저장해야 하고 테이블에 Address1 및 Address2라는 열과 같은 유사한 정보를 저장하는 여러 필드가 포함되어서는 안 된다.</p>

<h3 id="02-제-2-정규형-2nf">02. 제 2 정규형 (2NF)</h3>
<p>중복성을 줄이고 모든 필드가 엔터티 키가 식별하는 내용을 설명하는지 확인한다.<br />
2NF를 충족하려면 엔터티 키가 아닌 테이블의 모든 필드가 테이블의 엔터티 키(두 필드로 구성된 복합 키일 수 있음)에 완전히 종속되어야 한다.<br /></p>

<h3 id="03-제-3-정규형-3nf">03. 제 3 정규형 (3NF)</h3>
<p>테이블이 2NF를 충족하는 것 외에도 전이 종속성(A열이 B열에 종속되고 B열이 엔터티 키에 종속될 때 발생)을 포함하지 않는 경우 제 3 정규형을 충족한다.<br />3NF에 따라 정규화하려면 엔터티 키에 직접 의존하지 않기 때문에 테이블에서 A열을 제거하고 고유한 엔터티 키가 있는 다른 테이블에 배치해야 한다.</p>

<h2 id="4-데이터-정규화의-단점">4. 데이터 정규화의 단점</h2>
<p>더 높은 수준의 정규화에 도달하면 데이터베이스가 특정 분석 쿼리(ex. 많은 데이터를 가져와야 하는 쿼리)를 더 느린 속도로 수행하게 된다는 단점이 있다.<br />정규화된 데이터는 데이터베이스가 쿼리를 수행하기 위해 여러 테이블을 활용해야 하기 때문에 특히 데이터베이스가 복잡해지면 더 오래 걸리게 된다.</p>

<h2 id="5-데이터-정규화-과정-예시">5. 데이터 정규화 과정 예시</h2>
<p><a href="https://nbviewer.org/github/WoojinJeonkr/WoojinJeonkr.github.io/blob/main/assets/images/pdf/data_normalization.pdf" target="_blank" rel="noopener noreferrer">예시 확인하기</a></p>

<h2 id="6-참고-자료">6. 참고 자료</h2>
<ul>
  <li><a href="https://www.metabase.com/learn/databases/normalization">metabase.com - Data normalization</a></li>
  <li><a href="https://en.wikipedia.org/wiki/Database_normalization">Database normalization</a></li>
  <li><a href="https://learn.microsoft.com/en-us/office/troubleshoot/access/database-normalization-description">Description of the database normalization basics</a></li>
  <li><a href="https://www.guru99.com/database-normalization.html">What is Normalization in DBMS (SQL)? 1NF, 2NF, 3NF Example</a></li>
</ul>]]></content><author><name>WoojinJeon</name></author><category term="Skill" /><category term="Skill" /><category term="data" /><category term="database" /><category term="nomalization" /><summary type="html"><![CDATA[1. 데이터 정규화 데이터의 중복성을 줄이고 해당 데이터베이스를 보다 효율적으로 만들기 위해 데이터베이스의 정보를 구조화하는 것을 데이터 정규화라고 한다.]]></summary></entry><entry><title type="html">Jekyll vs Hugo vs Hexo</title><link href="https://woojinjeonkr.github.io//skill/2022/09/30/Jekyll-vs-Hugo-vs-Hexo.html" rel="alternate" type="text/html" title="Jekyll vs Hugo vs Hexo" /><published>2022-09-30T00:00:00+09:00</published><updated>2022-09-30T00:00:00+09:00</updated><id>https://woojinjeonkr.github.io//skill/2022/09/30/Jekyll-vs-Hugo-vs-Hexo</id><content type="html" xml:base="https://woojinjeonkr.github.io//skill/2022/09/30/Jekyll-vs-Hugo-vs-Hexo.html"><![CDATA[<h2 id="01-정적-웹사이트-생성기란">01. 정적 웹사이트 생성기란?</h2>
<p>정적 웹 사이트 생성 = 로컬 컴퓨터에서 HTML 파일을 생성한 다음 요청이 있을 때 해당 웹 사이트 파일을 사용자에게 제공하는 서버에 업로드하는 것을 말한다. 이때 서버는 서버 측 처리 또는 데이터베이스 통신을 수행하지 않으며, 요청이 있을 때만 일반 HTML 파일을 보내게 된다.<br />
월드 와이드 웹(World Wide Web, www)의 첫번째 웹사이트는 정적인 웹사이트였다(1991년 08월 06일, Tim Berners-Lee에 의해 라이브로 전환). 당시 서버는 PHP와 같은 스크립트 언어 또는 MySQL과 같은 데이터베이스가 없이 매우 원시적이었기 때문이다.</p>

<h3 id="001--world-wide-webwww-w3">001. 💡 World Wide Web(www, w3)</h3>
<p>인터넷에 연결된 컴퓨터를 통해 사람들이 정보를 공유할 수 있는 전 세계적인 정보 공간을 말한다.<br />
인터넷 상의 정보를 하이퍼텍스트 방식과 멀티미디어 환경에서 검색할 수 있게 해주는 정보 검색 시스템으로 하이퍼텍스트 형식으로 표현된 인터넷 상의 다양한 정보를 효과적으로 검색하는 시스템으로 전세계적으로 가장 널리 보급되어 있다.<br />
통일된 웹 자원의 위치 지정 방법(URL), 웹의 자원 이름에 접근하는 프로토콜(HTTP), 자원들 사이를 쉽게 항해할 수 있는 언어(HTML)와 같은 3가지 기능을 가지고 있다.<br /></p>

<h3 id="002--php">002. 💡 PHP</h3>
<p>대표적인 서버 사이드 스크립트 언어로 전 세계 수많은 웹 시스템의 기반이 되는 언어로 비슷한 언어로는 ASP, JSP 등이 있다.<br />
C-like 문법으로 되어 있고, CGI보다 나으며, Peri처럼 배열이 연관 배열이라 자료구조가 간편하고, 기본적으로 내장된 웹 관련 함수들이 많아 웹 페이지 제작 시 생산성이 높다는 점에서 사용자 및 사용처가 많다.<br />
동적 웹 페이지를 만들기 위해 설계되었으며 이를 구현하기 위해 PHP로 작성된 코드를 HTML 소스 문서 안에 넣으면 PHP 처리 기능이 있는 웹 서버에서 해당 코드를 인식하여 작성자가 원하는 웹 페이지를 생성한다.<br /></p>

<h3 id="003--mysql">003. 💡 MySQL</h3>
<p>세계에서 가장 많이 쓰이는 오픈 소스의 관계형 데이터베이스 관리 시스템이다.<br /> 다중 스레드, 다중 사용자 형식의 구조질의어 형식의 데이터베이스 관리 시스템으로서 오라클이 관리 및 지원하고 있으며, Qt처럼 이중 라이선스가 적용된다.<br /></p>

<h2 id="02-정적-접근-방식을-선택하는-이유">02. 정적 접근 방식을 선택하는 이유</h2>
<ul>
  <li>컨텐츠가 플랫 파일로 저장되어 데이터베이스가 필요하지 않다.</li>
  <li>동적 서버 측 처리가 필요하지 않다.</li>
  <li>서버 측 처리나 데이터베이스 접근이 필요 없기에 동적 웹 사이트보다 속도가 매우 빠르다는 장점을 가진다.</li>
  <li>악용할 보안 허점이 적기 때문에 동적 웹 사이트보다 보안적 측면에서 더 안전하다.</li>
  <li>CDN과 함께 사용할 경우 확장성이 뛰어나다</li>
  <li>정적 파일을 캐싱하는 것이 동적 페이지를 캐싱하는 것보다 더 효과적이다.</li>
</ul>

<h3 id="001--플랫-파일flat-file">001. 💡 플랫 파일(flat file)</h3>
<p>아무런 구조적 상호관계가 없는 레코드들이 들어 있는 파일<br /></p>

<h3 id="002--플랫-파일-데이터베이스flat-file-database">002. 💡 플랫 파일 데이터베이스(flat file database)</h3>
<p>하나의 데이터 모델(보통 하나의 테이블)을 플레인 텍스트 파일로 인코딩하는 방법 및 그런 방법을 쓴 일종의 데이터베이스를 총칭한다.<br /></p>
<figure>
    <img src="https://github.com/WoojinJeonkr/WoojinJeonkr.github.io/blob/main/assets/images/post_image/csv_format_to_relative_database_table.png?raw=true" />
    <figcaption>CSV포맷을 관계형 데이터베이스의 테이블로 옮기는 것을 설명한 그림 - 출처: wikipedia</figcaption>
</figure>
<p>CSV 포맷은 플랫 파일 데이터베이스의 일종이라 말할 수 있다.<br /></p>

<h3 id="003--cdncontent-delivery-network-or-content-distribution-network">003. 💡 CDN(Content Delivery Network or Content Distribution Network)</h3>
<p>콘텐츠 전송 네트워크는 콘텐츠를 효율적으로 전달하기 위해 여러 노드를 가진 네트워크에 데이터를 저장하여 제공하는 시스템을 말한다.<br />
인터넷 서비스 제공자(ISP)에 직접 연결되어 데이터를 전송하므로, 콘텐츠 병목을 피할 수 있는 장점이 있다.<br />
CDN의 목적은 높은 사용성과 효율로 사용자에게 컨텐츠를 전달함에 있다. CDN은 웹 요소 (텍스트, 그래픽, 스크립트), 다운로드 가능한 요소 (미디어 파일, 소프트웨어, 문서), 애플리케이션 (전자상거래, 포털), 실시간 미디어, 주문형 스트리밍, 그리고 소셜 네트워크 등 오늘날 인터넷에 존재하는 컨텐츠의 상당수를 서비스하고 있다.<br /></p>

<h2 id="03-jekyll-hugo-hexo에-대해서">03. Jekyll, Hugo, Hexo에 대해서</h2>
<ol>
  <li>Jekyll : Github 페이지에 전원을 공급하기 위해 Github에서 만든 Ruby 생성기로 Ruby 언어로 구축되었으며 Github Pages를 무료로 사용하여 정적 웹사이트를 호스팅하고 CNAME 파일을 사용하여 사용자 지정 최상위 도메인 이름과 쉽게 연결할 수 있다.<br /></li>
  <li>Hugo : Go에 내장된 정적 사이트 생성기로 세계에서 가장 빠른 웹사이트 구축 프레임워크로 광고된다.<br /> Jeykll과 달리 정적으로 컴파일된 언어인 Go로 작성되어 있으며 Hugo를 몇 초만에 설치하고 평균 정적 웹 사이트를 1초 이내에 구축할 수 있다.<br /> YAML, Front Matter와 함께 Markdown 형식을 사용한다.<br /></li>
  <li>Hexo : MIT 라이센스에 따라 사용할 수 있는 노드 기반의 오픈 소스 정적 생성기이다. Node.js 플랫폼 덕분에 Hexo는 수백 개의 정적 파일을 몇 초 만에 생성할 수 있다.<br /></li>
</ol>

<table>
  <thead>
    <tr>
      <th style="text-align: center">종류</th>
      <th>장점</th>
      <th>단점</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">Jekyll</td>
      <td>1. 무료 오픈 소스이다<br />2. gems를 통해 쉽게 제작하고 RubyGems를 통해 배포 가능하다<br />3. Jekyll 수입업체 덕분에 인기 있는 플랫폼(ex. WordPress)에서 컨텐츠를 쉽게 마이그레이션 가능하다<br />4. 기본적이고 적절한 최소 테마가 제공된다</td>
      <td>1. 웹 사이트 콘텐츠가 증가할수록 빌드 프로세스는 상당히 느려짐<br />2. 제목 또는 YAML에서 변수 사용을 지원하지 않는다<br />3. 많은 플러그인이 구식이다.<br />4. gem 의존성은 비호환성을 초래할 수 있다<br />5. Github Pages는 즉시 Jekyll을 지원하지만<br />Github-safe 플러그인 세트만 사용 가능하다<br />6. Livereload에 대한 기본 제공 지원이 없다</td>
    </tr>
    <tr>
      <td style="text-align: center">Hugo</td>
      <td>1. 오픈 소스 및 무료 프로젝트이다<br />2. 매우 빠른 속도를 자랑하며, 속도에 최적화되어 있다<br />3. 동적 API 기반 콘텐츠를 기본적으로 지원한다<br />4. 짧은 코드 덕분에, markdown에 대한 유연한 대안을 제공한다<br />5. 다중 및 사용자 지정 출력을 지원한다<br />6. 설치가 쉽고 의존성이 없다</td>
      <td>1. Go 템플릿을 사용하기 때문에 테마를 만들려면 Go에 익숙해야 한다<br />2. 확장성 및 플러그인에 몇 가지 단점이 있다</td>
    </tr>
    <tr>
      <td style="text-align: center">Hexo</td>
      <td>1. 속도가 엄청나게 빠르다<br />2. 하나의 배포 명령으로 Github 페이지 또는 다른 호스트에 배포한다<br />3. 확장성이 매우 높고 markdown을 지원한다<br />4. 무료 및 오픈 소스 테마를 사용할 수 있다</td>
      <td>1. 비교적 큰 커뮤니티를 가지고 있지만 대다수가 영어가 아닌 사람들로 정보를 얻는데 불편함을 겪을 수 있다.</td>
    </tr>
  </tbody>
</table>

<h2 id="04-참고-자료">04. 참고 자료</h2>
<ul>
  <li><a href="https://www.techiediaries.com/jekyll-hugo-hexo/">How to Choose the Right Static Generator: Jekyll vs. Hugo vs. Hexo</a></li>
  <li><a href="https://en.wikipedia.org/wiki/World_Wide_Web">World Wide Web</a></li>
  <li><a href="https://en.wikipedia.org/wiki/PHP">PHP</a></li>
  <li><a href="https://en.wikipedia.org/wiki/MySQL">MySQL</a></li>
  <li><a href="https://en.wikipedia.org/wiki/Flat-file_database">Flat-file database</a></li>
  <li><a href="https://en.wikipedia.org/wiki/Content_delivery_network">Content delivery network</a></li>
</ul>]]></content><author><name>WoojinJeon</name></author><category term="Skill" /><category term="Skill" /><category term="Jekyll" /><category term="Hugo" /><category term="Hexo" /><category term="static_site_generator" /><summary type="html"><![CDATA[01. 정적 웹사이트 생성기란? 정적 웹 사이트 생성 = 로컬 컴퓨터에서 HTML 파일을 생성한 다음 요청이 있을 때 해당 웹 사이트 파일을 사용자에게 제공하는 서버에 업로드하는 것을 말한다. 이때 서버는 서버 측 처리 또는 데이터베이스 통신을 수행하지 않으며, 요청이 있을 때만 일반 HTML 파일을 보내게 된다. 월드 와이드 웹(World Wide Web, www)의 첫번째 웹사이트는 정적인 웹사이트였다(1991년 08월 06일, Tim Berners-Lee에 의해 라이브로 전환). 당시 서버는 PHP와 같은 스크립트 언어 또는 MySQL과 같은 데이터베이스가 없이 매우 원시적이었기 때문이다.]]></summary></entry><entry><title type="html">코드를 빨리 배우는데 도움이 되는 3가지 팁</title><link href="https://woojinjeonkr.github.io//skill/2022/09/29/%EC%BD%94%EB%93%9C%EB%A5%BC-%EB%B9%A8%EB%A6%AC-%EB%B0%B0%EC%9A%B0%EB%8A%94%EB%8D%B0-%EB%8F%84%EC%9B%80%EC%9D%B4-%EB%90%98%EB%8A%94-3%EA%B0%80%EC%A7%80-%ED%8C%81.html" rel="alternate" type="text/html" title="코드를 빨리 배우는데 도움이 되는 3가지 팁" /><published>2022-09-29T00:00:00+09:00</published><updated>2022-09-29T00:00:00+09:00</updated><id>https://woojinjeonkr.github.io//skill/2022/09/29/%EC%BD%94%EB%93%9C%EB%A5%BC-%EB%B9%A8%EB%A6%AC-%EB%B0%B0%EC%9A%B0%EB%8A%94%EB%8D%B0-%EB%8F%84%EC%9B%80%EC%9D%B4-%EB%90%98%EB%8A%94-3%EA%B0%80%EC%A7%80-%ED%8C%81</id><content type="html" xml:base="https://woojinjeonkr.github.io//skill/2022/09/29/%EC%BD%94%EB%93%9C%EB%A5%BC-%EB%B9%A8%EB%A6%AC-%EB%B0%B0%EC%9A%B0%EB%8A%94%EB%8D%B0-%EB%8F%84%EC%9B%80%EC%9D%B4-%EB%90%98%EB%8A%94-3%EA%B0%80%EC%A7%80-%ED%8C%81.html"><![CDATA[<p style="background-color: #f5f0ff">이 문서는 Coding with Lewis의 <b>These 3 tips will help you learn code FASTER</b>이라는 영상의 내용과 댓글들을 정리하였습니다.</p>
<p><a href="https://youtu.be/UVxhEk3ph5w" target="_blank" rel="noopener noreferrer">영상 보러 가기</a><br />
<br /></p>

<h2 id="1-튜토리얼을-너무-많이-하지-말아라">1. 튜토리얼을 너무 많이 하지 말아라</h2>
<p>튜토리얼 지옥은 튜토리얼에 대해서만 잘하게 되고 그 외로는 발전하지 않는다.<br />튜토리얼을 본 다음 작성한 프로젝트를 살펴보고 관련된 문서를 읽어보자.<br />이렇게 함으로써 당신은 더 큰 그림을 잘 이해할 수 있다.</p>

<h2 id="2-프로그래머가-아닌-문제-해결사가-되자">2. 프로그래머가 아닌 문제 해결사가 되자</h2>
<p>프로그램 언어는 작업을 수행하기 위한 도구이다.<br />프로그래머로서, 당신은 문제를 해결하기 위해 프로그래밍을 사용하므로 문제를 빨리 학습하여 한 번에 한 단계씩 해결할 수 있다.<br />Google은 당신의 가장 친한 친구이다.<br /></p>

<h2 id="3-다른-사람이-작성한-코드를-많이-읽어보자">3. 다른 사람이 작성한 코드를 많이 읽어보자</h2>
<p>다른 사람의 코드를 읽는 것은 다른 사람이 문제를 해결하는 방법을 이해하는 가장 좋은 방법이다.<br />코드를 작성하는 것보다 더 많은 코드를 읽을 가능성이 높다.<br /></p>

<h2 id="4-이외에-도움이-되는-팁들">4. 이외에 도움이 되는 팁들</h2>
<p><span style="background-color:#F7DDBE"> Writer: Pie the Nice Guy </span><br />
프로젝트가 어떻게 진행될지에 대해 생각하고 이야기하는데 항상 5분 이상을 할애해라.<br />프로그래밍은 언어이다.<br />만약 당신이 당신의 언어로 당신이 무엇을 하고 있는지 설명할 수 없다면, 당신은 그것을 어떻게 코드로 번역할 것인지 예상할 수 있는가?<br />나는 그들의 프로젝트가 어떻게 진행될지 스스로 설명하는 것조차 잊어버려 주요 프로젝트에서 실패하는 반 친구들을 많이 봐왔다. 그 결과 나중에 구현 악몽이 발생한다.<br />몇 분 동안 문제를 생각하는데 시간을 보내는 것은 실제로 나중에 많은 시간을 절약할 수 있다.<br />
<br />
<span style="background-color:#F7DDBE"> Writer: Black Hole </span><br />
구문을 외우려고 하지 말고 그것이 어떻게 작동하는지와 같은 프로그래밍 작품의 논리를 학습하자.<br />
<br />
<span style="background-color:#F7DDBE"> Writer: Arrow Stuhl </span><br />
좋은 팁은 작은 코드를 복사하고 확장하여 의미를 이해함으로써 일부 요소를 재사용할 수 있다는 것이다.<br />
<br />
<span style="background-color:#F7DDBE"> Writer: That One </span><br />
수백만 명의 사람들이 “이 앱에 대한 아이디어가 있어”라고 말한다(대부분의 경우 최악이다).<br />하나만 골라서 처음부터 만들어라. 다 만들고 나서 모든 것을 폐기하더라도, 그 과정에서 성취감을 느끼면서 더 많은 것을 배울 것이다. 또한 그 아이디어가 괜찮은 것으로 판명되어 다른 수익원을 얻게 되거나, 회사가 상당한 이익을 위해 매각할 수 있는 아주 작은 기회를 얻을 수 있을 것이다.<br />
<br />
<span style="background-color:#F7DDBE"> Writer: DaniSC </span><br />
일반적으로 무언가를 배우고 싶다면 항상 배우고 싶은 것을 해야된다고 생각한다.<br />한 가지 예는 게임이다. 게임을 처음 할 때는 혼란스럽지만 게임을 더 많이 할수록 어떻게 작동하는지 더 잘 이해할 수 있다.<br />
<br />
<span style="background-color:#F7DDBE"> Writer: Szoboszlai Dániel </span><br />
이것들은 꽤 유용한 팁들이지만, 저는 한 가지를 더 추가하고 싶습니다.<br />무리하지 마세요. 만약 당신이 일을 할 수 없는 선에 갇혀있다면, 휴식을 취하거나, 유튜브를 보거나 비디오 게임을 하거나, 나중에 시도해보세요.<br />만약 당신이 스트레스 없이 그것을 한다면, 당신은 아마도 다른 시도를 하는 것보다 더 빨리 답을 알아낼 것입니다.<br /></p>

<h2 id="5-자료-출처">5. 자료 출처</h2>
<p><a href="https://youtu.be/UVxhEk3ph5w">youtube: Coding with Lewis - These 3 tips will help you learn code FASTER 👩‍💻</a></p>]]></content><author><name>WoojinJeon</name></author><category term="Skill" /><category term="Skill" /><category term="Learn_code" /><category term="tips" /><summary type="html"><![CDATA[이 문서는 Coding with Lewis의 These 3 tips will help you learn code FASTER이라는 영상의 내용과 댓글들을 정리하였습니다. 영상 보러 가기]]></summary></entry><entry><title type="html">정규표현식</title><link href="https://woojinjeonkr.github.io//skill/2022/09/28/%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D.html" rel="alternate" type="text/html" title="정규표현식" /><published>2022-09-28T00:00:00+09:00</published><updated>2022-09-28T00:00:00+09:00</updated><id>https://woojinjeonkr.github.io//skill/2022/09/28/%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D</id><content type="html" xml:base="https://woojinjeonkr.github.io//skill/2022/09/28/%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D.html"><![CDATA[<h2 id="1-정규표현식">1. 정규표현식</h2>
<p>데이터 내에서 광범위하게 또는 세부적으로 일치하는 패턴을 찾아내는 특정 문자 시퀀스를 정규표현식이라고 한다.<br />
즉, 특정한 규칙을 가진 문자열의 집합을 표현하는 데 사용하는 형식 언어를 말한다.<br /></p>

<h2 id="2-메타문자">2. 메타문자</h2>
<p>원래 그 문자가 가진 뜻이 아닌 특별한 용도로 사용하는 문자를 말한다<br />
다음과 같은 문자들이 메타문자에 속한다.<br /></p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>. ^ $ * + ? { } [ ] \ | ( )
</code></pre></div></div>

<li>자주 사용하는 문자 클래스</li>
<ol>
    <li>&nbsp;[a-zA-Z] : 알파벳 모두</li>
    <li>&nbsp;[0-9] : 숫자</li>
    <li>&nbsp;\d : 숫자, [0-9]와 동일한 표현식</li>
    <li>&nbsp;\D : 숫자가 아닌 것, [^0-9]와 동일한 표현식</li>
    <li>&nbsp;\s : whitespace 문자, [ \t\n\r\f\v]와 동일한 표현식</li>
    <li>&nbsp;\w : 문자+숫자(alphanumeric), [a-zA-Z0-9_]와 동일한 표현식</li>
    <li>&nbsp;\W : 문자+숫자(alphanumeric)가 아닌 문자, [^a-zA-Z0-9_]와 동일한 표현식</li>
</ol>

<h2 id="3-dot">3. Dot(.)</h2>
<p>줄바꿈 문자인 \n을 제외한 모든 문자와 매치됨을 의미한다.<br />
정규식을 작성할 때 re.DOTALL 옵션을 주면 \n 문자와도 매치된다.<br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>a.b = a + 모든문자 + b
</code></pre></div></div>

<p>a.b는 a와 b라는 문자 사이에 어떤 문자가 들어가도 모두 매치된다는 말이다.<br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>a[.]b = a + Dot(.)문자 + b
</code></pre></div></div>

<p>a[.]b는 “a.b” 문자열과 매치되고, “a0b” 문자열과는 매치되지 않는다<br />
단, 문자 클래스([]) 내에 Dot(.) 메타 문자가 사용된다면 이것은 “모든 문자”라는 의미가 아닌 문자 . 그대로를 의미한다<br /></p>

<h2 id="4-반복-">4. 반복 (*)</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ca*t =  * 바로 앞에 있는 문자 a가 0부터 2억번 반복될 수 있다는 의미이다.
</code></pre></div></div>

<table>
  <thead>
    <tr>
      <th style="text-align: center">정규식</th>
      <th style="text-align: center">문자열</th>
      <th style="text-align: center">Match 여부</th>
      <th>설명</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">ca*t</td>
      <td style="text-align: center">ct</td>
      <td style="text-align: center">Yes</td>
      <td>"a"가 0번 반복되어 매치</td>
    </tr>
    <tr>
      <td style="text-align: center">ca*t</td>
      <td style="text-align: center">cat</td>
      <td style="text-align: center">Yes</td>
      <td>"a"가 0번 이상 반복되어 매치 (1번 반복)</td>
    </tr>
    <tr>
      <td style="text-align: center">ca*t</td>
      <td style="text-align: center">caaat</td>
      <td style="text-align: center">Yes</td>
      <td>"a"가 0번 이상 반복되어 매치 (3번 반복)</td>
    </tr>
  </tbody>
</table>

<h2 id="5-반복-">5. 반복 (+)</h2>
<p>위에서 반복을 의미하는 *이 0부터 반복된다면 +는 1부터 반복된다.<br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ca+t = c + a(1번 이상 반복) + t
</code></pre></div></div>

<table>
  <thead>
    <tr>
      <th style="text-align: center">정규식</th>
      <th style="text-align: center">문자열</th>
      <th style="text-align: center">Match 여부</th>
      <th>설명</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">ca+t</td>
      <td style="text-align: center">ct</td>
      <td style="text-align: center">No</td>
      <td>"a"가 0번 반복되어 매치되지 않음</td>
    </tr>
    <tr>
      <td style="text-align: center">ca+t</td>
      <td style="text-align: center">cat</td>
      <td style="text-align: center">Yes</td>
      <td>"a"가 1번 이상 반복되어 매치 (1번 반복)</td>
    </tr>
    <tr>
      <td style="text-align: center">ca+t</td>
      <td style="text-align: center">caaat</td>
      <td style="text-align: center">Yes</td>
      <td>"a"가 1번 이상 반복되어 매치 (3번 반복)</td>
    </tr>
  </tbody>
</table>

<h2 id="6-반복-mn-">6. 반복 ({m,n}, ?)</h2>
<p>{ } 메타 문자를 사용하여 반복 횟수를 고정할 수 있다<br />
{m, n} 정규식을 사용하면 반복 횟수가 m부터 n까지 매치할 수 있다. 또한 m 또는 n을 생략할 수도 있다.<br />
{1,}은 +와 동일하고, {0,}은 *와 동일하다.<br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ca{2}t = c + a(반드시 2번 반복) + t
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ca{2,5}t = c + a(2~5회 반복) + t
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ab?c = a + b(있어도 되고 없어도 된다) + c
</code></pre></div></div>

<table>
  <thead>
    <tr>
      <th style="text-align: center">정규식</th>
      <th style="text-align: center">문자열</th>
      <th style="text-align: center">Match 여부</th>
      <th>설명</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">ca{2}t</td>
      <td style="text-align: center">cat</td>
      <td style="text-align: center">No</td>
      <td>"a"가 1번만 반복되어 매치되지 않음</td>
    </tr>
    <tr>
      <td style="text-align: center">ca{2}t</td>
      <td style="text-align: center">caat</td>
      <td style="text-align: center">Yes</td>
      <td>"a"가 2번 반복되어 매치</td>
    </tr>
    <tr>
      <td style="text-align: center">ca{2,5}t</td>
      <td style="text-align: center">cat</td>
      <td style="text-align: center">No</td>
      <td>"a"가 1번만 반복되어 매치되지 않음</td>
    </tr>
    <tr>
      <td style="text-align: center">ca{2,5}t</td>
      <td style="text-align: center">caat</td>
      <td style="text-align: center">Yes</td>
      <td>"a"가 2번 반복되어 매치</td>
    </tr>
    <tr>
      <td style="text-align: center">ca{2,5}t</td>
      <td style="text-align: center">caaaaat</td>
      <td style="text-align: center">Yes</td>
      <td>"a"가 5번 반복되어 매치</td>
    </tr>
    <tr>
      <td style="text-align: center">ab?c</td>
      <td style="text-align: center">abc</td>
      <td style="text-align: center">Yes</td>
      <td>"b"가 1번 사용되어 매치</td>
    </tr>
    <tr>
      <td style="text-align: center">ab?c</td>
      <td style="text-align: center">ac</td>
      <td style="text-align: center">Yes</td>
      <td>"b"가 0번 사용되어 매치</td>
    </tr>
  </tbody>
</table>

<h2 id="7-파이썬에서-정규표현식-사용하기">7. 파이썬에서 정규표현식 사용하기</h2>
<p>re.compile을 사용하여 정규 표현식(ab*)을 컴파일할 수 있다.<br /></p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">re</span>
<span class="n">p</span> <span class="o">=</span> <span class="n">re</span><span class="p">.</span><span class="nb">compile</span><span class="p">(</span><span class="s">'ab*'</span><span class="p">)</span>
</code></pre></div></div>
<h2 id="8-정규식을-이용한-문자열-검색">8. 정규식을 이용한 문자열 검색</h2>
<p>다음과 같은 방법으로 상황에 따라 정규식을 이용하여 문자열을 검색할 수 있다.<br /></p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Method</th>
      <th>목적</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">match()</td>
      <td>문자열의 처음부터 정규식과 매치되는지 조사한다.</td>
    </tr>
    <tr>
      <td style="text-align: center">search()</td>
      <td>문자열 전체를 검색하여 정규식과 매치되는지 조사한다.</td>
    </tr>
    <tr>
      <td style="text-align: center">findall()</td>
      <td>정규식과 매치되는 모든 문자열(substring)을 리스트로 돌려준다.</td>
    </tr>
    <tr>
      <td style="text-align: center">finditer()</td>
      <td>정규식과 매치되는 모든 문자열(substring)을 반복 가능한 객체로 돌려준다.</td>
    </tr>
  </tbody>
</table>

<p><a href="https://wikidocs.net/4308" target="_blank" rel="noopener noreferrer">더 알아보기</a></p>

<h2 id="9-각-언어별-정규식-사용방법-알아보기">9. 각 언어별 정규식 사용방법 알아보기</h2>
<ul>
  <li><a href="https://wikidocs.net/4308">Python</a></li>
  <li><a href="https://codechacha.com/ko/java-regex/">Java</a></li>
  <li><a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Guide/Regular_Expressions">Javascript</a></li>
  <li><a href="https://www.educba.com/typescript-regex/">Typescript</a></li>
  <li><a href="https://learn.microsoft.com/ko-kr/cpp/dotnet/regular-expressions-cpp-cli?view=msvc-170">C++</a></li>
</ul>

<h2 id="10-정규표현식을-연습할-수-있는-사이트">10. 정규표현식을 연습할 수 있는 사이트</h2>
<p>RegExr은 정규식(RegEx/RegExp)을 학습, 구축 및 테스트하기 위한 온라인 도구로 JavaScript 및 PHP/PCRE 정규식을 지원한다.<br />
<a href="https://regexr.com/" target="_blank" rel="noopner noreferrer">연습하러 가기</a></p>

<h2 id="11-참고자료">11. 참고자료</h2>
<ul>
  <li><a href="https://wikidocs.net/4308">점프 투 파이썬 07-2 정규 표현식 시작하기</a></li>
</ul>]]></content><author><name>WoojinJeon</name></author><category term="Skill" /><category term="Skill" /><category term="regex" /><summary type="html"><![CDATA[1. 정규표현식 데이터 내에서 광범위하게 또는 세부적으로 일치하는 패턴을 찾아내는 특정 문자 시퀀스를 정규표현식이라고 한다. 즉, 특정한 규칙을 가진 문자열의 집합을 표현하는 데 사용하는 형식 언어를 말한다.]]></summary></entry><entry><title type="html">matplotlib을 이용하여 그래프 그리기 (5)</title><link href="https://woojinjeonkr.github.io//python/2022/09/27/matplotlib%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EA%B7%B8%EB%9E%98%ED%94%84-%EA%B7%B8%EB%A6%AC%EA%B8%B0-(5).html" rel="alternate" type="text/html" title="matplotlib을 이용하여 그래프 그리기 (5)" /><published>2022-09-27T00:00:00+09:00</published><updated>2022-09-27T00:00:00+09:00</updated><id>https://woojinjeonkr.github.io//python/2022/09/27/matplotlib%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EA%B7%B8%EB%9E%98%ED%94%84-%EA%B7%B8%EB%A6%AC%EA%B8%B0-(5)</id><content type="html" xml:base="https://woojinjeonkr.github.io//python/2022/09/27/matplotlib%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EA%B7%B8%EB%9E%98%ED%94%84-%EA%B7%B8%EB%A6%AC%EA%B8%B0-(5).html"><![CDATA[<h2 id="1-시계열-데이터">1. 시계열 데이터</h2>
<p>시간 순서로 배열된 데이터의 한 종류로 시간에 걸쳐 순차적으로 기록된다.<br />
다음과 같은 데이터를 시계열 데이터로 볼 수 있다.</p>
<li>주식수익률 데이터를 포함한 재무데이터</li>
<li>인플레이션, 소비자 물가를 포함한 각종 경제 관련 데이터</li>
<li>시간 순으로 기록된 정당 지지율</li>
<p><br /></p>

<h2 id="2-시계열-데이터를-시각화하는-방법">2. 시계열 데이터를 시각화하는 방법</h2>
<p>시계열 도표는 주어진 메트릭이 시간에 따라 어떻게 변하는지 시각화하는 데 사용된다.<br />
시계열 도표를 그리는 방법은 다음과 같다.<br /></p>
<li>선 그래프</li>
<li>히스토그램과 밀도 분포</li>
<li>상자 수염 그림</li>
<li>히트맵</li>
<li>시차 도표 또는 산점도</li>
<li>자기상관도표</li>
<p><br /></p>

<h2 id="3-시계열-도표">3. 시계열 도표</h2>
<p>이 문서에서는 선 그래프를 통해 시계열 데이터를 다루는 방법에 대해 알아본다.<br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 라이브러리 불러오기
</span><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="c1"># 데이터 가져오기
</span><span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">'https://github.com/mwaskom/seaborn-data/raw/master/flights.csv'</span><span class="p">)</span>

<span class="c1"># 영어로 된 달 이름을 수로 바꾸기
</span><span class="n">month2int</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s">'January'</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
    <span class="s">'February'</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
    <span class="s">'March'</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
    <span class="s">'April'</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span>
    <span class="s">'May'</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span>
    <span class="s">'June'</span><span class="p">:</span> <span class="mi">6</span><span class="p">,</span>
    <span class="s">'July'</span><span class="p">:</span> <span class="mi">7</span><span class="p">,</span>
    <span class="s">'August'</span><span class="p">:</span> <span class="mi">8</span><span class="p">,</span>
    <span class="s">'September'</span><span class="p">:</span> <span class="mi">9</span><span class="p">,</span>
    <span class="s">'October'</span><span class="p">:</span> <span class="mi">10</span><span class="p">,</span>
    <span class="s">'November'</span><span class="p">:</span> <span class="mi">11</span><span class="p">,</span>
    <span class="s">'December'</span><span class="p">:</span> <span class="mi">12</span>
<span class="p">}</span>

<span class="c1"># 컬럼의 값 일괄 변환
</span><span class="n">df</span><span class="p">[</span><span class="s">'month'</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">'month'</span><span class="p">].</span><span class="nb">map</span><span class="p">(</span><span class="n">month2int</span><span class="p">)</span>

<span class="c1"># 날짜 형식 변환
</span><span class="n">df</span><span class="p">[</span><span class="s">'day'</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span>
<span class="n">df</span><span class="p">[</span><span class="s">'date'</span><span class="p">]</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="n">df</span><span class="p">[[</span><span class="s">'year'</span><span class="p">,</span> <span class="s">'month'</span><span class="p">,</span> <span class="s">'day'</span><span class="p">]])</span>

<span class="c1"># 시각화
# 12개월 단위로 이동평균 구하기
</span><span class="n">df</span><span class="p">[</span><span class="s">'1y'</span><span class="p">]</span> <span class="o">=</span> <span class="n">df</span><span class="p">[</span><span class="s">'passengers'</span><span class="p">].</span><span class="n">rolling</span><span class="p">(</span><span class="n">window</span><span class="o">=</span><span class="mi">12</span><span class="p">).</span><span class="n">mean</span><span class="p">()</span>
<span class="c1"># 월별 승객 수(passengers)의 그래프에 12개월 이동 평균선을 빨간색으로 표시
</span><span class="n">ax</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'date'</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s">'passengers'</span><span class="p">)</span>
<span class="n">df</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="s">'date'</span><span class="p">,</span> <span class="n">y</span><span class="o">=</span><span class="s">'1y'</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s">'red'</span><span class="p">,</span> <span class="n">ax</span><span class="o">=</span><span class="n">ax</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">tight_layout</span><span class="p">()</span>
<span class="n">plt</span><span class="p">.</span><span class="n">savefig</span><span class="p">(</span><span class="s">'time_series_line_plot.png'</span><span class="p">)</span>
</code></pre></div></div>
<p><img src="https://github.com/WoojinJeonkr/WoojinJeonkr.github.io/blob/main/assets/images/post_image/time_series_line_plot.png?raw=true" /></p>

<h2 id="5-참고-자료">5. 참고 자료</h2>
<ul>
  <li><a href="http://aispiration.com/finance/stat-time-series-basics.html">데이터 과학 – 금융(Finance) &gt; 시계열 데이터 다루기(padr, tibbletime, lubridate)</a></li>
  <li><a href="https://mindscale.kr/course/pandas-basic/timeseries/">18. 시계열 데이터</a></li>
  <li><a href="https://www.machinelearningplus.com/plots/top-50-matplotlib-visualizations-the-master-plots-python/#2.-Bubble-plot-with-Encircling">Top 50 matplotlib Visualizations – The Master Plots (with full python code)</a></li>
  <li><a href="https://machinelearningmastery.com/time-series-data-visualization-with-python/">Time Series Data Visualization with Python</a></li>
</ul>]]></content><author><name>WoojinJeon</name></author><category term="Python" /><category term="Python" /><category term="matplotlib" /><category term="graph" /><category term="time_series_plot" /><summary type="html"><![CDATA[1. 시계열 데이터 시간 순서로 배열된 데이터의 한 종류로 시간에 걸쳐 순차적으로 기록된다. 다음과 같은 데이터를 시계열 데이터로 볼 수 있다. 주식수익률 데이터를 포함한 재무데이터 인플레이션, 소비자 물가를 포함한 각종 경제 관련 데이터 시간 순으로 기록된 정당 지지율]]></summary></entry><entry><title type="html">matplotlib을 이용하여 그래프 그리기 (4)</title><link href="https://woojinjeonkr.github.io//python/2022/09/26/matplotlib%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EA%B7%B8%EB%9E%98%ED%94%84-%EA%B7%B8%EB%A6%AC%EA%B8%B0-(4).html" rel="alternate" type="text/html" title="matplotlib을 이용하여 그래프 그리기 (4)" /><published>2022-09-26T00:00:00+09:00</published><updated>2022-09-26T00:00:00+09:00</updated><id>https://woojinjeonkr.github.io//python/2022/09/26/matplotlib%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EA%B7%B8%EB%9E%98%ED%94%84-%EA%B7%B8%EB%A6%AC%EA%B8%B0-(4)</id><content type="html" xml:base="https://woojinjeonkr.github.io//python/2022/09/26/matplotlib%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EA%B7%B8%EB%9E%98%ED%94%84-%EA%B7%B8%EB%A6%AC%EA%B8%B0-(4).html"><![CDATA[<h2 id="deviation">Deviation</h2>
<p>편차, 기본 데이터가 평균으로부터 얼마나 떨어져 있는지에 대해 나타낸다.<br /></p>

<h2 id="편차-막대">편차 막대</h2>
<p>단일 메트릭을 기반으로 항목이 어떻게 변하는지 확인하고 변동의 순서와 양을 시각화하려는 경우 사용한다.<br />
데이터에서 그룹의 성능을 빠르게 구별하는 데 도움이 되며 매우 직관적이며 즉시 요점을 전달할 수 있다.<br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 라이브러리 불러오기
</span><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="c1"># 데이터 가져오기 및 전처리
</span><span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">"https://github.com/selva86/datasets/raw/master/mtcars.csv"</span><span class="p">)</span>
<span class="n">x</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">loc</span><span class="p">[:,</span> <span class="p">[</span><span class="s">'mpg'</span><span class="p">]]</span>
<span class="n">df</span><span class="p">[</span><span class="s">'mpg_z'</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">x</span> <span class="o">-</span> <span class="n">x</span><span class="p">.</span><span class="n">mean</span><span class="p">())</span><span class="o">/</span><span class="n">x</span><span class="p">.</span><span class="n">std</span><span class="p">()</span>
<span class="n">df</span><span class="p">[</span><span class="s">'colors'</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="s">'red'</span> <span class="k">if</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="k">else</span> <span class="s">'green'</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">df</span><span class="p">[</span><span class="s">'mpg_z'</span><span class="p">]]</span>
<span class="n">df</span><span class="p">.</span><span class="n">sort_values</span><span class="p">(</span><span class="s">'mpg_z'</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">df</span><span class="p">.</span><span class="n">reset_index</span><span class="p">(</span><span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="c1"># 그래프 그리기
</span><span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">14</span><span class="p">,</span><span class="mi">10</span><span class="p">),</span> <span class="n">dpi</span><span class="o">=</span> <span class="mi">80</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">hlines</span><span class="p">(</span><span class="n">y</span><span class="o">=</span><span class="n">df</span><span class="p">.</span><span class="n">index</span><span class="p">,</span> <span class="n">xmin</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">xmax</span><span class="o">=</span><span class="n">df</span><span class="p">.</span><span class="n">mpg_z</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="n">df</span><span class="p">.</span><span class="n">colors</span><span class="p">,</span> <span class="n">alpha</span><span class="o">=</span><span class="mf">0.4</span><span class="p">,</span> <span class="n">linewidth</span><span class="o">=</span><span class="mi">5</span><span class="p">)</span>

<span class="c1"># 그래프 꾸미기
</span><span class="n">plt</span><span class="p">.</span><span class="n">gca</span><span class="p">().</span><span class="nb">set</span><span class="p">(</span><span class="n">ylabel</span><span class="o">=</span><span class="s">'$Model$'</span><span class="p">,</span> <span class="n">xlabel</span><span class="o">=</span><span class="s">'$Mileage$'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">yticks</span><span class="p">(</span><span class="n">df</span><span class="p">.</span><span class="n">index</span><span class="p">,</span> <span class="n">df</span><span class="p">.</span><span class="n">cars</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">title</span><span class="p">(</span><span class="s">'Diverging Bars of Car Mileage'</span><span class="p">,</span> <span class="n">fontdict</span><span class="o">=</span><span class="p">{</span><span class="s">'size'</span><span class="p">:</span><span class="mi">20</span><span class="p">})</span>
<span class="n">plt</span><span class="p">.</span><span class="n">grid</span><span class="p">(</span><span class="n">linestyle</span><span class="o">=</span><span class="s">'--'</span><span class="p">,</span> <span class="n">alpha</span><span class="o">=</span><span class="mf">0.5</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">tight_layout</span><span class="p">()</span>
<span class="n">plt</span><span class="p">.</span><span class="n">savefig</span><span class="p">(</span><span class="s">'diversing_bar.png'</span><span class="p">)</span>
</code></pre></div></div>
<p><img src="https://github.com/WoojinJeonkr/WoojinJeonkr.github.io/blob/main/assets/images/post_image/diversing_bar.png?raw=true" /></p>

<h2 id="편차-막대에-값-표시하기">편차 막대에 값 표시하기</h2>
<p>차트 내 각 항목의 값을 멋지고 보기 좋은 방식으로 표시하려는 경우 사용한다.<br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 라이브러리 불러오기
</span><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="c1"># 데이터 가져오기 및 전처리
</span><span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">"https://github.com/selva86/datasets/raw/master/mtcars.csv"</span><span class="p">)</span>
<span class="n">x</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">loc</span><span class="p">[:,</span> <span class="p">[</span><span class="s">'mpg'</span><span class="p">]]</span>
<span class="n">df</span><span class="p">[</span><span class="s">'mpg_z'</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">x</span> <span class="o">-</span> <span class="n">x</span><span class="p">.</span><span class="n">mean</span><span class="p">())</span><span class="o">/</span><span class="n">x</span><span class="p">.</span><span class="n">std</span><span class="p">()</span>
<span class="n">df</span><span class="p">[</span><span class="s">'colors'</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="s">'red'</span> <span class="k">if</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="k">else</span> <span class="s">'green'</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">df</span><span class="p">[</span><span class="s">'mpg_z'</span><span class="p">]]</span>
<span class="n">df</span><span class="p">.</span><span class="n">sort_values</span><span class="p">(</span><span class="s">'mpg_z'</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">df</span><span class="p">.</span><span class="n">reset_index</span><span class="p">(</span><span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="c1"># 그래프 그리기
</span><span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">14</span><span class="p">,</span><span class="mi">14</span><span class="p">),</span> <span class="n">dpi</span><span class="o">=</span> <span class="mi">80</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">hlines</span><span class="p">(</span><span class="n">y</span><span class="o">=</span><span class="n">df</span><span class="p">.</span><span class="n">index</span><span class="p">,</span> <span class="n">xmin</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">xmax</span><span class="o">=</span><span class="n">df</span><span class="p">.</span><span class="n">mpg_z</span><span class="p">)</span>
<span class="k">for</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">tex</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">df</span><span class="p">.</span><span class="n">mpg_z</span><span class="p">,</span> <span class="n">df</span><span class="p">.</span><span class="n">index</span><span class="p">,</span> <span class="n">df</span><span class="p">.</span><span class="n">mpg_z</span><span class="p">):</span>
    <span class="n">t</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">text</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="nb">round</span><span class="p">(</span><span class="n">tex</span><span class="p">,</span> <span class="mi">2</span><span class="p">),</span> <span class="n">horizontalalignment</span><span class="o">=</span><span class="s">'right'</span> <span class="k">if</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="k">else</span> <span class="s">'left'</span><span class="p">,</span> 
                <span class="n">verticalalignment</span><span class="o">=</span><span class="s">'center'</span><span class="p">,</span> <span class="n">fontdict</span><span class="o">=</span><span class="p">{</span><span class="s">'color'</span><span class="p">:</span><span class="s">'red'</span> <span class="k">if</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="mi">0</span> <span class="k">else</span> <span class="s">'green'</span><span class="p">,</span> <span class="s">'size'</span><span class="p">:</span><span class="mi">14</span><span class="p">})</span>

<span class="c1"># 그래프 꾸미기    
</span><span class="n">plt</span><span class="p">.</span><span class="n">yticks</span><span class="p">(</span><span class="n">df</span><span class="p">.</span><span class="n">index</span><span class="p">,</span> <span class="n">df</span><span class="p">.</span><span class="n">cars</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">title</span><span class="p">(</span><span class="s">'Diverging Text Bars of Car Mileage'</span><span class="p">,</span> <span class="n">fontdict</span><span class="o">=</span><span class="p">{</span><span class="s">'size'</span><span class="p">:</span><span class="mi">20</span><span class="p">})</span>
<span class="n">plt</span><span class="p">.</span><span class="n">grid</span><span class="p">(</span><span class="n">linestyle</span><span class="o">=</span><span class="s">'--'</span><span class="p">,</span> <span class="n">alpha</span><span class="o">=</span><span class="mf">0.5</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">xlim</span><span class="p">(</span><span class="o">-</span><span class="mf">2.5</span><span class="p">,</span> <span class="mf">2.5</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">tight_layout</span><span class="p">()</span>
<span class="n">plt</span><span class="p">.</span><span class="n">savefig</span><span class="p">(</span><span class="s">'diversing_text.png'</span><span class="p">)</span>
</code></pre></div></div>
<p><img src="https://github.com/WoojinJeonkr/WoojinJeonkr.github.io/blob/main/assets/images/post_image/diversing_text.png?raw=true" /></p>

<h2 id="편차를-점으로-표시하기">편차를 점으로 표시하기</h2>
<p>주의를 끌고자 하는 중요한 데이터 포인트를 강조하고 차트 내에서 적절하게 추론을 제공할 수 있다.<br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 라이브러리 불러오기
</span><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">import</span> <span class="nn">matplotlib.patches</span> <span class="k">as</span> <span class="n">patches</span>

<span class="c1"># 데이터 가져오기 및 전처리
</span><span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">"https://github.com/selva86/datasets/raw/master/mtcars.csv"</span><span class="p">)</span>
<span class="n">x</span> <span class="o">=</span> <span class="n">df</span><span class="p">.</span><span class="n">loc</span><span class="p">[:,</span> <span class="p">[</span><span class="s">'mpg'</span><span class="p">]]</span>
<span class="n">df</span><span class="p">[</span><span class="s">'mpg_z'</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">x</span> <span class="o">-</span> <span class="n">x</span><span class="p">.</span><span class="n">mean</span><span class="p">())</span><span class="o">/</span><span class="n">x</span><span class="p">.</span><span class="n">std</span><span class="p">()</span>
<span class="n">df</span><span class="p">[</span><span class="s">'colors'</span><span class="p">]</span> <span class="o">=</span> <span class="s">'black'</span>

<span class="c1"># 색 변경
</span><span class="n">df</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">df</span><span class="p">.</span><span class="n">cars</span> <span class="o">==</span> <span class="s">'Fiat X1-9'</span><span class="p">,</span> <span class="s">'colors'</span><span class="p">]</span> <span class="o">=</span> <span class="s">'darkorange'</span>
<span class="n">df</span><span class="p">.</span><span class="n">sort_values</span><span class="p">(</span><span class="s">'mpg_z'</span><span class="p">,</span> <span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="n">df</span><span class="p">.</span><span class="n">reset_index</span><span class="p">(</span><span class="n">inplace</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>

<span class="c1"># 그래프 그리기
</span><span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">14</span><span class="p">,</span><span class="mi">16</span><span class="p">),</span> <span class="n">dpi</span><span class="o">=</span> <span class="mi">80</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">hlines</span><span class="p">(</span><span class="n">y</span><span class="o">=</span><span class="n">df</span><span class="p">.</span><span class="n">index</span><span class="p">,</span> <span class="n">xmin</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">xmax</span><span class="o">=</span><span class="n">df</span><span class="p">.</span><span class="n">mpg_z</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="n">df</span><span class="p">.</span><span class="n">colors</span><span class="p">,</span> <span class="n">alpha</span><span class="o">=</span><span class="mf">0.4</span><span class="p">,</span> <span class="n">linewidth</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">scatter</span><span class="p">(</span><span class="n">df</span><span class="p">.</span><span class="n">mpg_z</span><span class="p">,</span> <span class="n">df</span><span class="p">.</span><span class="n">index</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="n">df</span><span class="p">.</span><span class="n">colors</span><span class="p">,</span> <span class="n">s</span><span class="o">=</span><span class="p">[</span><span class="mi">600</span> <span class="k">if</span> <span class="n">x</span> <span class="o">==</span> <span class="s">'Fiat X1-9'</span> <span class="k">else</span> <span class="mi">300</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">df</span><span class="p">.</span><span class="n">cars</span><span class="p">],</span> <span class="n">alpha</span><span class="o">=</span><span class="mf">0.6</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">yticks</span><span class="p">(</span><span class="n">df</span><span class="p">.</span><span class="n">index</span><span class="p">,</span> <span class="n">df</span><span class="p">.</span><span class="n">cars</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">xticks</span><span class="p">(</span><span class="n">fontsize</span><span class="o">=</span><span class="mi">12</span><span class="p">)</span>

<span class="c1"># 주석 달기
</span><span class="n">plt</span><span class="p">.</span><span class="n">annotate</span><span class="p">(</span><span class="s">'Mercedes Models'</span><span class="p">,</span> <span class="n">xy</span><span class="o">=</span><span class="p">(</span><span class="mf">0.0</span><span class="p">,</span> <span class="mf">11.0</span><span class="p">),</span> <span class="n">xytext</span><span class="o">=</span><span class="p">(</span><span class="mf">1.0</span><span class="p">,</span> <span class="mi">11</span><span class="p">),</span> <span class="n">xycoords</span><span class="o">=</span><span class="s">'data'</span><span class="p">,</span> 
            <span class="n">fontsize</span><span class="o">=</span><span class="mi">15</span><span class="p">,</span> <span class="n">ha</span><span class="o">=</span><span class="s">'center'</span><span class="p">,</span> <span class="n">va</span><span class="o">=</span><span class="s">'center'</span><span class="p">,</span>
            <span class="n">bbox</span><span class="o">=</span><span class="nb">dict</span><span class="p">(</span><span class="n">boxstyle</span><span class="o">=</span><span class="s">'square'</span><span class="p">,</span> <span class="n">fc</span><span class="o">=</span><span class="s">'firebrick'</span><span class="p">),</span>
            <span class="n">arrowprops</span><span class="o">=</span><span class="nb">dict</span><span class="p">(</span><span class="n">arrowstyle</span><span class="o">=</span><span class="s">'-[, widthB=2.0, lengthB=1.5'</span><span class="p">,</span> <span class="n">lw</span><span class="o">=</span><span class="mf">2.0</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s">'steelblue'</span><span class="p">),</span> <span class="n">color</span><span class="o">=</span><span class="s">'white'</span><span class="p">)</span>

<span class="c1"># 패치 추가
</span><span class="n">p1</span> <span class="o">=</span> <span class="n">patches</span><span class="p">.</span><span class="n">Rectangle</span><span class="p">((</span><span class="o">-</span><span class="mf">2.0</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">),</span> <span class="n">width</span><span class="o">=</span><span class="p">.</span><span class="mi">3</span><span class="p">,</span> <span class="n">height</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">alpha</span><span class="o">=</span><span class="p">.</span><span class="mi">2</span><span class="p">,</span> <span class="n">facecolor</span><span class="o">=</span><span class="s">'red'</span><span class="p">)</span>
<span class="n">p2</span> <span class="o">=</span> <span class="n">patches</span><span class="p">.</span><span class="n">Rectangle</span><span class="p">((</span><span class="mf">1.5</span><span class="p">,</span> <span class="mi">27</span><span class="p">),</span> <span class="n">width</span><span class="o">=</span><span class="p">.</span><span class="mi">8</span><span class="p">,</span> <span class="n">height</span><span class="o">=</span><span class="mi">5</span><span class="p">,</span> <span class="n">alpha</span><span class="o">=</span><span class="p">.</span><span class="mi">2</span><span class="p">,</span> <span class="n">facecolor</span><span class="o">=</span><span class="s">'green'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">gca</span><span class="p">().</span><span class="n">add_patch</span><span class="p">(</span><span class="n">p1</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">gca</span><span class="p">().</span><span class="n">add_patch</span><span class="p">(</span><span class="n">p2</span><span class="p">)</span>

<span class="c1"># 그래프 꾸미기
</span><span class="n">plt</span><span class="p">.</span><span class="n">title</span><span class="p">(</span><span class="s">'Diverging Bars of Car Mileage'</span><span class="p">,</span> <span class="n">fontdict</span><span class="o">=</span><span class="p">{</span><span class="s">'size'</span><span class="p">:</span><span class="mi">20</span><span class="p">})</span>
<span class="n">plt</span><span class="p">.</span><span class="n">grid</span><span class="p">(</span><span class="n">linestyle</span><span class="o">=</span><span class="s">'--'</span><span class="p">,</span> <span class="n">alpha</span><span class="o">=</span><span class="mf">0.5</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">tight_layout</span><span class="p">()</span>
<span class="n">plt</span><span class="p">.</span><span class="n">savefig</span><span class="p">(</span><span class="s">'diversing_dot.png'</span><span class="p">)</span>
</code></pre></div></div>
<p><img src="https://github.com/WoojinJeonkr/WoojinJeonkr.github.io/blob/main/assets/images/post_image/diversing_dot.png?raw=true" /></p>

<h2 id="영역-차트">영역 차트</h2>
<p>축과 선 사이의 영역을 색칠함으로써 고점과 저점뿐만 아니라 고점과 저점의 지속 시간을 더욱 강조할 수 있다.<br />
고점의 지속 시간이 길수록 선 아래의 면적이 커진다.<br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 라이브러리 불러오기
</span><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>

<span class="c1"># 데이터 가져오기 및 전처리
</span><span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">read_csv</span><span class="p">(</span><span class="s">"https://github.com/selva86/datasets/raw/master/economics.csv"</span><span class="p">,</span> <span class="n">parse_dates</span><span class="o">=</span><span class="p">[</span><span class="s">'date'</span><span class="p">]).</span><span class="n">head</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span>
<span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="n">df</span><span class="p">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
<span class="n">y_returns</span> <span class="o">=</span> <span class="p">(</span><span class="n">df</span><span class="p">.</span><span class="n">psavert</span><span class="p">.</span><span class="n">diff</span><span class="p">().</span><span class="n">fillna</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">/</span><span class="n">df</span><span class="p">.</span><span class="n">psavert</span><span class="p">.</span><span class="n">shift</span><span class="p">(</span><span class="mi">1</span><span class="p">)).</span><span class="n">fillna</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="o">*</span> <span class="mi">100</span>

<span class="c1"># 그래프 그리기
</span><span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">16</span><span class="p">,</span><span class="mi">10</span><span class="p">),</span> <span class="n">dpi</span><span class="o">=</span> <span class="mi">80</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">fill_between</span><span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="mi">1</span><span class="p">:],</span> <span class="n">y_returns</span><span class="p">[</span><span class="mi">1</span><span class="p">:],</span> <span class="mi">0</span><span class="p">,</span> <span class="n">where</span><span class="o">=</span><span class="n">y_returns</span><span class="p">[</span><span class="mi">1</span><span class="p">:]</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">facecolor</span><span class="o">=</span><span class="s">'green'</span><span class="p">,</span> <span class="n">interpolate</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">alpha</span><span class="o">=</span><span class="mf">0.7</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">fill_between</span><span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="mi">1</span><span class="p">:],</span> <span class="n">y_returns</span><span class="p">[</span><span class="mi">1</span><span class="p">:],</span> <span class="mi">0</span><span class="p">,</span> <span class="n">where</span><span class="o">=</span><span class="n">y_returns</span><span class="p">[</span><span class="mi">1</span><span class="p">:]</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">facecolor</span><span class="o">=</span><span class="s">'red'</span><span class="p">,</span> <span class="n">interpolate</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">alpha</span><span class="o">=</span><span class="mf">0.7</span><span class="p">)</span>

<span class="c1"># 주석 달기
</span><span class="n">plt</span><span class="p">.</span><span class="n">annotate</span><span class="p">(</span><span class="s">'Peak </span><span class="se">\n</span><span class="s">1975'</span><span class="p">,</span> <span class="n">xy</span><span class="o">=</span><span class="p">(</span><span class="mf">94.0</span><span class="p">,</span> <span class="mf">21.0</span><span class="p">),</span> <span class="n">xytext</span><span class="o">=</span><span class="p">(</span><span class="mf">88.0</span><span class="p">,</span> <span class="mi">28</span><span class="p">),</span>
            <span class="n">bbox</span><span class="o">=</span><span class="nb">dict</span><span class="p">(</span><span class="n">boxstyle</span><span class="o">=</span><span class="s">'square'</span><span class="p">,</span> <span class="n">fc</span><span class="o">=</span><span class="s">'firebrick'</span><span class="p">),</span>
            <span class="n">arrowprops</span><span class="o">=</span><span class="nb">dict</span><span class="p">(</span><span class="n">facecolor</span><span class="o">=</span><span class="s">'steelblue'</span><span class="p">,</span> <span class="n">shrink</span><span class="o">=</span><span class="mf">0.05</span><span class="p">),</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">15</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s">'white'</span><span class="p">)</span>


<span class="c1"># 그래프 꾸미기
</span><span class="n">xtickvals</span> <span class="o">=</span> <span class="p">[</span><span class="nb">str</span><span class="p">(</span><span class="n">m</span><span class="p">)[:</span><span class="mi">3</span><span class="p">].</span><span class="n">upper</span><span class="p">()</span><span class="o">+</span><span class="s">"-"</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">y</span><span class="p">)</span> <span class="k">for</span> <span class="n">y</span><span class="p">,</span><span class="n">m</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">df</span><span class="p">.</span><span class="n">date</span><span class="p">.</span><span class="n">dt</span><span class="p">.</span><span class="n">year</span><span class="p">,</span> <span class="n">df</span><span class="p">.</span><span class="n">date</span><span class="p">.</span><span class="n">dt</span><span class="p">.</span><span class="n">month_name</span><span class="p">())]</span>
<span class="n">plt</span><span class="p">.</span><span class="n">gca</span><span class="p">().</span><span class="n">set_xticks</span><span class="p">(</span><span class="n">x</span><span class="p">[::</span><span class="mi">6</span><span class="p">])</span>
<span class="n">plt</span><span class="p">.</span><span class="n">gca</span><span class="p">().</span><span class="n">set_xticklabels</span><span class="p">(</span><span class="n">xtickvals</span><span class="p">[::</span><span class="mi">6</span><span class="p">],</span> <span class="n">rotation</span><span class="o">=</span><span class="mi">90</span><span class="p">,</span> <span class="n">fontdict</span><span class="o">=</span><span class="p">{</span><span class="s">'horizontalalignment'</span><span class="p">:</span> <span class="s">'center'</span><span class="p">,</span> <span class="s">'verticalalignment'</span><span class="p">:</span> <span class="s">'center_baseline'</span><span class="p">})</span>
<span class="n">plt</span><span class="p">.</span><span class="n">ylim</span><span class="p">(</span><span class="o">-</span><span class="mi">35</span><span class="p">,</span><span class="mi">35</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">xlim</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">100</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">title</span><span class="p">(</span><span class="s">"Month Economics Return %"</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">22</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">'Monthly returns %'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">grid</span><span class="p">(</span><span class="n">alpha</span><span class="o">=</span><span class="mf">0.5</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">tight_layout</span><span class="p">()</span>
<span class="n">plt</span><span class="p">.</span><span class="n">savefig</span><span class="p">(</span><span class="s">'Area_chart.png'</span><span class="p">)</span>
</code></pre></div></div>
<p><img src="https://github.com/WoojinJeonkr/WoojinJeonkr.github.io/blob/main/assets/images/post_image/Area_chart.png?raw=true" /></p>

<h2 id="5-참고-자료">5. 참고 자료</h2>
<ul>
  <li><a href="https://en.wikipedia.org/wiki/Deviation">Deviation</a></li>
  <li><a href="https://depictdatastudio.com/charts/deviation-graph/">Deviation Graph</a></li>
  <li><a href="https://www.machinelearningplus.com/plots/top-50-matplotlib-visualizations-the-master-plots-python/#2.-Bubble-plot-with-Encircling">Top 50 matplotlib Visualizations – The Master Plots (with full python code)</a></li>
</ul>]]></content><author><name>WoojinJeon</name></author><category term="Python" /><category term="Python" /><category term="matplotlib" /><category term="graph" /><category term="Deviation" /><summary type="html"><![CDATA[Deviation 편차, 기본 데이터가 평균으로부터 얼마나 떨어져 있는지에 대해 나타낸다.]]></summary></entry><entry><title type="html">matplotlib을 이용하여 그래프 그리기 (3)</title><link href="https://woojinjeonkr.github.io//python/2022/09/25/matplotlib%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EA%B7%B8%EB%9E%98%ED%94%84-%EA%B7%B8%EB%A6%AC%EA%B8%B0-(3).html" rel="alternate" type="text/html" title="matplotlib을 이용하여 그래프 그리기 (3)" /><published>2022-09-25T00:00:00+09:00</published><updated>2022-09-25T00:00:00+09:00</updated><id>https://woojinjeonkr.github.io//python/2022/09/25/matplotlib%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EA%B7%B8%EB%9E%98%ED%94%84-%EA%B7%B8%EB%A6%AC%EA%B8%B0-(3)</id><content type="html" xml:base="https://woojinjeonkr.github.io//python/2022/09/25/matplotlib%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EA%B7%B8%EB%9E%98%ED%94%84-%EA%B7%B8%EB%A6%AC%EA%B8%B0-(3).html"><![CDATA[<h2 id="1-pie-chart">1. Pie Chart</h2>
<p>범주별 구성 비율을 원형으로 표현한 그래프이다<br />
Pie Chart의 특징은 다음과 같다.<br /></p>
<ol>
  <li>차원별로 측정값의 비중을 보여주기 위한 목적으로 사용</li>
  <li>전체 측정값의 합을 360도(비율 : 100%)로 정의하고 차원의 구분값에 따른 측정값의 비율에 맞춰 각 영역의 파이 차트 각도를 표현</li>
  <li>부채꼴의 중심각을 구성 비율에 비례한다</li>
</ol>

<h2 id="2-기본적인-pie-chart-그리기">2. 기본적인 Pie Chart 그리기</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># matplotlib 라이브러리 불러오기
</span><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="c1"># 원형 차트: 슬라이스가 시계 반대 방향으로 정렬되고 플롯된다.
</span><span class="n">labels</span> <span class="o">=</span> <span class="s">'Frogs'</span><span class="p">,</span> <span class="s">'Hogs'</span><span class="p">,</span> <span class="s">'Dogs'</span><span class="p">,</span> <span class="s">'Logs'</span>
<span class="n">sizes</span> <span class="o">=</span> <span class="p">[</span><span class="mi">15</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">10</span><span class="p">]</span>
<span class="n">explode</span> <span class="o">=</span> <span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mf">0.1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span> <span class="c1"># 부채꼴이 파이 차트의 중심에서 벗어나는 정도 설정
</span>
<span class="n">fig1</span><span class="p">,</span> <span class="n">ax1</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">()</span>
<span class="n">ax1</span><span class="p">.</span><span class="n">pie</span><span class="p">(</span><span class="n">sizes</span><span class="p">,</span> <span class="n">explode</span><span class="o">=</span><span class="n">explode</span><span class="p">,</span> <span class="n">labels</span><span class="o">=</span><span class="n">labels</span><span class="p">,</span> <span class="n">autopct</span><span class="o">=</span><span class="s">'%1.1f%%'</span><span class="p">,</span>
        <span class="n">shadow</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">startangle</span><span class="o">=</span><span class="mi">90</span><span class="p">)</span>
<span class="n">ax1</span><span class="p">.</span><span class="n">axis</span><span class="p">(</span><span class="s">'equal'</span><span class="p">)</span> <span class="c1"># 가로 세로 비율이 같으면 파이가 원으로 그려진다.
</span>
<span class="n">plt</span><span class="p">.</span><span class="n">tight_layout</span><span class="p">()</span>
<span class="n">plt</span><span class="p">.</span><span class="n">savefig</span><span class="p">(</span><span class="s">'basic_pieplot.png'</span><span class="p">)</span>
</code></pre></div></div>
<p><img src="https://github.com/WoojinJeonkr/WoojinJeonkr.github.io/blob/main/assets/images/post_image/basic_pieplot.png?raw=true" /></p>

<h2 id="3-범례와-값이-표시된-pie-chart-그리기">3. 범례와 값이 표시된 Pie Chart 그리기</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 라이브러리 불러오기
</span><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="c1"># 플롯 지정
</span><span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">6</span><span class="p">,</span> <span class="mi">3</span><span class="p">),</span> <span class="n">subplot_kw</span><span class="o">=</span><span class="nb">dict</span><span class="p">(</span><span class="n">aspect</span><span class="o">=</span><span class="s">"equal"</span><span class="p">))</span>

<span class="c1"># recipe data 생성
</span><span class="n">recipe</span> <span class="o">=</span> <span class="p">[</span><span class="s">"375 g flour"</span><span class="p">,</span> <span class="s">"75 g sugar"</span><span class="p">,</span> <span class="s">"250 g butter"</span><span class="p">,</span> <span class="s">"300 g berries"</span><span class="p">]</span>

<span class="c1"># recipe data를 data와 label로 분류
</span><span class="n">data</span> <span class="o">=</span> <span class="p">[</span><span class="nb">float</span><span class="p">(</span><span class="n">x</span><span class="p">.</span><span class="n">split</span><span class="p">()[</span><span class="mi">0</span><span class="p">])</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">recipe</span><span class="p">]</span>
<span class="n">ingredients</span> <span class="o">=</span> <span class="p">[</span><span class="n">x</span><span class="p">.</span><span class="n">split</span><span class="p">()[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">recipe</span><span class="p">]</span>

<span class="c1"># 절대값을 표시하여 자동 백분율 레이블 지정을 확장하는 함수
</span><span class="k">def</span> <span class="nf">func</span><span class="p">(</span><span class="n">pct</span><span class="p">,</span> <span class="n">allvals</span><span class="p">):</span>
    <span class="n">absolute</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nb">round</span><span class="p">(</span><span class="n">pct</span><span class="o">/</span><span class="mf">100.</span><span class="o">*</span><span class="n">np</span><span class="p">.</span><span class="nb">sum</span><span class="p">(</span><span class="n">allvals</span><span class="p">)))</span>
    <span class="k">return</span> <span class="s">"{:.1f}%</span><span class="se">\n</span><span class="s">({:d} g)"</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">pct</span><span class="p">,</span> <span class="n">absolute</span><span class="p">)</span>

<span class="c1"># pieplot 그리기
</span><span class="n">wedges</span><span class="p">,</span> <span class="n">texts</span><span class="p">,</span> <span class="n">autotexts</span> <span class="o">=</span> <span class="n">ax</span><span class="p">.</span><span class="n">pie</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">autopct</span><span class="o">=</span><span class="k">lambda</span> <span class="n">pct</span><span class="p">:</span> <span class="n">func</span><span class="p">(</span><span class="n">pct</span><span class="p">,</span> <span class="n">data</span><span class="p">),</span>
                                <span class="n">textprops</span><span class="o">=</span><span class="nb">dict</span><span class="p">(</span><span class="n">color</span><span class="o">=</span><span class="s">"w"</span><span class="p">))</span>
<span class="n">ax</span><span class="p">.</span><span class="n">legend</span><span class="p">(</span><span class="n">wedges</span><span class="p">,</span> <span class="n">ingredients</span><span class="p">,</span>
        <span class="n">title</span><span class="o">=</span><span class="s">"Ingredients"</span><span class="p">,</span>
        <span class="n">loc</span><span class="o">=</span><span class="s">"center left"</span><span class="p">,</span>
        <span class="n">bbox_to_anchor</span><span class="o">=</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mf">0.5</span><span class="p">,</span> <span class="mi">1</span><span class="p">))</span>
<span class="n">plt</span><span class="p">.</span><span class="n">setp</span><span class="p">(</span><span class="n">autotexts</span><span class="p">,</span> <span class="n">size</span><span class="o">=</span><span class="mi">8</span><span class="p">,</span> <span class="n">weight</span><span class="o">=</span><span class="s">"bold"</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">"Matplotlib bakery: A pie"</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">tight_layout</span><span class="p">()</span>
<span class="n">plt</span><span class="p">.</span><span class="n">savefig</span><span class="p">(</span><span class="s">'pieplot_label.png'</span><span class="p">)</span>
</code></pre></div></div>
<p><img src="https://github.com/WoojinJeonkr/WoojinJeonkr.github.io/blob/main/assets/images/post_image/pieplot_label.png?raw=true" /></p>

<h2 id="4-pie-chart--bar-chart">4. Pie Chart + Bar Chart</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 라이브러리 불러오기
</span><span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">from</span> <span class="nn">matplotlib.patches</span> <span class="kn">import</span> <span class="n">ConnectionPatch</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="c1"># figure 생성 및 축 지정
</span><span class="n">fig</span><span class="p">,</span> <span class="p">(</span><span class="n">ax1</span><span class="p">,</span> <span class="n">ax2</span><span class="p">)</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">9</span><span class="p">,</span> <span class="mi">5</span><span class="p">))</span>
<span class="n">fig</span><span class="p">.</span><span class="n">subplots_adjust</span><span class="p">(</span><span class="n">wspace</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>

<span class="c1"># pie chart 매개변수 지정
</span><span class="n">overall_ratios</span> <span class="o">=</span> <span class="p">[.</span><span class="mi">27</span><span class="p">,</span> <span class="p">.</span><span class="mi">56</span><span class="p">,</span> <span class="p">.</span><span class="mi">17</span><span class="p">]</span>
<span class="n">labels</span> <span class="o">=</span> <span class="p">[</span><span class="s">'Approve'</span><span class="p">,</span> <span class="s">'Disapprove'</span><span class="p">,</span> <span class="s">'Undecided'</span><span class="p">]</span>
<span class="n">explode</span> <span class="o">=</span> <span class="p">[</span><span class="mf">0.1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">]</span>
<span class="c1"># rotate so that first wedge is split by the x-axis
</span><span class="n">angle</span> <span class="o">=</span> <span class="o">-</span><span class="mi">180</span> <span class="o">*</span> <span class="n">overall_ratios</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<span class="n">wedges</span><span class="p">,</span> <span class="o">*</span><span class="n">_</span> <span class="o">=</span> <span class="n">ax1</span><span class="p">.</span><span class="n">pie</span><span class="p">(</span><span class="n">overall_ratios</span><span class="p">,</span> <span class="n">autopct</span><span class="o">=</span><span class="s">'%1.1f%%'</span><span class="p">,</span> <span class="n">startangle</span><span class="o">=</span><span class="n">angle</span><span class="p">,</span>
                    <span class="n">labels</span><span class="o">=</span><span class="n">labels</span><span class="p">,</span> <span class="n">explode</span><span class="o">=</span><span class="n">explode</span><span class="p">)</span>

<span class="c1"># bar chart 매개변수 지정
</span><span class="n">age_ratios</span> <span class="o">=</span> <span class="p">[.</span><span class="mi">33</span><span class="p">,</span> <span class="p">.</span><span class="mi">54</span><span class="p">,</span> <span class="p">.</span><span class="mi">07</span><span class="p">,</span> <span class="p">.</span><span class="mi">06</span><span class="p">]</span>
<span class="n">age_labels</span> <span class="o">=</span> <span class="p">[</span><span class="s">'Under 35'</span><span class="p">,</span> <span class="s">'35-49'</span><span class="p">,</span> <span class="s">'50-65'</span><span class="p">,</span> <span class="s">'Over 65'</span><span class="p">]</span>
<span class="n">bottom</span> <span class="o">=</span> <span class="mi">1</span>
<span class="n">width</span> <span class="o">=</span> <span class="p">.</span><span class="mi">2</span>

<span class="c1"># 범례 표시 설정
</span><span class="k">for</span> <span class="n">j</span><span class="p">,</span> <span class="p">(</span><span class="n">height</span><span class="p">,</span> <span class="n">label</span><span class="p">)</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="nb">reversed</span><span class="p">([</span><span class="o">*</span><span class="nb">zip</span><span class="p">(</span><span class="n">age_ratios</span><span class="p">,</span> <span class="n">age_labels</span><span class="p">)])):</span>
    <span class="n">bottom</span> <span class="o">-=</span> <span class="n">height</span>
    <span class="n">bc</span> <span class="o">=</span> <span class="n">ax2</span><span class="p">.</span><span class="n">bar</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">height</span><span class="p">,</span> <span class="n">width</span><span class="p">,</span> <span class="n">bottom</span><span class="o">=</span><span class="n">bottom</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s">'C0'</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="n">label</span><span class="p">,</span>
                 <span class="n">alpha</span><span class="o">=</span><span class="mf">0.1</span> <span class="o">+</span> <span class="mf">0.25</span> <span class="o">*</span> <span class="n">j</span><span class="p">)</span>
    <span class="n">ax2</span><span class="p">.</span><span class="n">bar_label</span><span class="p">(</span><span class="n">bc</span><span class="p">,</span> <span class="n">labels</span><span class="o">=</span><span class="p">[</span><span class="sa">f</span><span class="s">"</span><span class="si">{</span><span class="n">height</span><span class="si">:</span><span class="p">.</span><span class="mi">0</span><span class="o">%</span><span class="si">}</span><span class="s">"</span><span class="p">],</span> <span class="n">label_type</span><span class="o">=</span><span class="s">'center'</span><span class="p">)</span>

<span class="n">ax2</span><span class="p">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">'Age of approvers'</span><span class="p">)</span>
<span class="n">ax2</span><span class="p">.</span><span class="n">legend</span><span class="p">()</span>
<span class="n">ax2</span><span class="p">.</span><span class="n">axis</span><span class="p">(</span><span class="s">'off'</span><span class="p">)</span>
<span class="n">ax2</span><span class="p">.</span><span class="n">set_xlim</span><span class="p">(</span><span class="o">-</span> <span class="mf">2.5</span> <span class="o">*</span> <span class="n">width</span><span class="p">,</span> <span class="mf">2.5</span> <span class="o">*</span> <span class="n">width</span><span class="p">)</span>

<span class="c1"># 두 그림 사이에 선 긋기
</span><span class="n">theta1</span><span class="p">,</span> <span class="n">theta2</span> <span class="o">=</span> <span class="n">wedges</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">theta1</span><span class="p">,</span> <span class="n">wedges</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">theta2</span>
<span class="n">center</span><span class="p">,</span> <span class="n">r</span> <span class="o">=</span> <span class="n">wedges</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">center</span><span class="p">,</span> <span class="n">wedges</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">r</span>
<span class="n">bar_height</span> <span class="o">=</span> <span class="nb">sum</span><span class="p">(</span><span class="n">age_ratios</span><span class="p">)</span>

<span class="c1"># 상단 연결선 그리기
</span><span class="n">x</span> <span class="o">=</span> <span class="n">r</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="n">cos</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">pi</span> <span class="o">/</span> <span class="mi">180</span> <span class="o">*</span> <span class="n">theta2</span><span class="p">)</span> <span class="o">+</span> <span class="n">center</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<span class="n">y</span> <span class="o">=</span> <span class="n">r</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="n">sin</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">pi</span> <span class="o">/</span> <span class="mi">180</span> <span class="o">*</span> <span class="n">theta2</span><span class="p">)</span> <span class="o">+</span> <span class="n">center</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
<span class="n">con</span> <span class="o">=</span> <span class="n">ConnectionPatch</span><span class="p">(</span><span class="n">xyA</span><span class="o">=</span><span class="p">(</span><span class="o">-</span><span class="n">width</span> <span class="o">/</span> <span class="mi">2</span><span class="p">,</span> <span class="n">bar_height</span><span class="p">),</span> <span class="n">coordsA</span><span class="o">=</span><span class="n">ax2</span><span class="p">.</span><span class="n">transData</span><span class="p">,</span>
                    <span class="n">xyB</span><span class="o">=</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">),</span> <span class="n">coordsB</span><span class="o">=</span><span class="n">ax1</span><span class="p">.</span><span class="n">transData</span><span class="p">)</span>
<span class="n">con</span><span class="p">.</span><span class="n">set_color</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">])</span>
<span class="n">con</span><span class="p">.</span><span class="n">set_linewidth</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>
<span class="n">ax2</span><span class="p">.</span><span class="n">add_artist</span><span class="p">(</span><span class="n">con</span><span class="p">)</span>

<span class="c1"># 하단 연결선 그리기
</span><span class="n">x</span> <span class="o">=</span> <span class="n">r</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="n">cos</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">pi</span> <span class="o">/</span> <span class="mi">180</span> <span class="o">*</span> <span class="n">theta1</span><span class="p">)</span> <span class="o">+</span> <span class="n">center</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<span class="n">y</span> <span class="o">=</span> <span class="n">r</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="n">sin</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">pi</span> <span class="o">/</span> <span class="mi">180</span> <span class="o">*</span> <span class="n">theta1</span><span class="p">)</span> <span class="o">+</span> <span class="n">center</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
<span class="n">con</span> <span class="o">=</span> <span class="n">ConnectionPatch</span><span class="p">(</span><span class="n">xyA</span><span class="o">=</span><span class="p">(</span><span class="o">-</span><span class="n">width</span> <span class="o">/</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="n">coordsA</span><span class="o">=</span><span class="n">ax2</span><span class="p">.</span><span class="n">transData</span><span class="p">,</span>
                    <span class="n">xyB</span><span class="o">=</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">),</span> <span class="n">coordsB</span><span class="o">=</span><span class="n">ax1</span><span class="p">.</span><span class="n">transData</span><span class="p">)</span>
<span class="n">con</span><span class="p">.</span><span class="n">set_color</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">])</span>
<span class="n">ax2</span><span class="p">.</span><span class="n">add_artist</span><span class="p">(</span><span class="n">con</span><span class="p">)</span>
<span class="n">con</span><span class="p">.</span><span class="n">set_linewidth</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="n">tight_layout</span><span class="p">()</span>
<span class="n">plt</span><span class="p">.</span><span class="n">savefig</span><span class="p">(</span><span class="s">'bar_of_pie.png'</span><span class="p">)</span>
</code></pre></div></div>
<p><img src="https://github.com/WoojinJeonkr/WoojinJeonkr.github.io/blob/main/assets/images/post_image/bar_of_pie.png?raw=true" /></p>

<h2 id="5-참고-자료">5. 참고 자료</h2>
<ul>
  <li><a href="https://matplotlib.org/stable/gallery/pie_and_polar_charts/pie_features.html">Basic pie chart</a></li>
  <li><a href="https://matplotlib.org/stable/gallery/pie_and_polar_charts/bar_of_pie.html">Bar of pie</a></li>
  <li><a href="https://matplotlib.org/stable/gallery/pie_and_polar_charts/pie_and_donut_labels.html">Labeling a pie and a donut</a></li>
  <li><a href="https://wikidocs.net/92114">Matplotlib 파이 차트 그리기</a></li>
</ul>]]></content><author><name>WoojinJeon</name></author><category term="Python" /><category term="Python" /><category term="matplotlib" /><category term="graph" /><category term="piechart" /><summary type="html"><![CDATA[1. Pie Chart 범주별 구성 비율을 원형으로 표현한 그래프이다 Pie Chart의 특징은 다음과 같다. 차원별로 측정값의 비중을 보여주기 위한 목적으로 사용 전체 측정값의 합을 360도(비율 : 100%)로 정의하고 차원의 구분값에 따른 측정값의 비율에 맞춰 각 영역의 파이 차트 각도를 표현 부채꼴의 중심각을 구성 비율에 비례한다]]></summary></entry><entry><title type="html">Calendar heatmap 그리기</title><link href="https://woojinjeonkr.github.io//python/2022/09/24/Calendar-heatmap-%EA%B7%B8%EB%A6%AC%EA%B8%B0.html" rel="alternate" type="text/html" title="Calendar heatmap 그리기" /><published>2022-09-24T00:00:00+09:00</published><updated>2022-09-24T00:00:00+09:00</updated><id>https://woojinjeonkr.github.io//python/2022/09/24/Calendar-heatmap-%EA%B7%B8%EB%A6%AC%EA%B8%B0</id><content type="html" xml:base="https://woojinjeonkr.github.io//python/2022/09/24/Calendar-heatmap-%EA%B7%B8%EB%A6%AC%EA%B8%B0.html"><![CDATA[<h2 id="1-calmap">1. calmap</h2>
<p>시계열 데이터를 히트맵으로 표현하는데 사용하는 라이브러리이다.</p>

<h2 id="2-라이브러리-설치">2. 라이브러리 설치</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">pip</span> <span class="n">install</span> <span class="n">calmap</span>
</code></pre></div></div>

<p>calmap을 통해 다음과 같은 깃허브의 Contribution 그래프를 그릴 수 있다.<br />
<img src="https://github.com/WoojinJeonkr/WoojinJeonkr.github.io/blob/main/assets/images/post_image/my_github_contribution_plot_20220923.png?raw=true" /></p>

<h2 id="3-calendar-heatmap-그리기">3. Calendar heatmap 그리기</h2>
<p>DatetimeIndex가 있는 Pandas 시리즈로 가중치 이벤트가 있다고 가정한다.<br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 필요한 라이브러리 가져오기
</span><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">import</span> <span class="nn">calmap</span>

<span class="c1"># 시드 설정
</span><span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">seed</span><span class="p">(</span><span class="nb">sum</span><span class="p">(</span><span class="nb">map</span><span class="p">(</span><span class="nb">ord</span><span class="p">,</span> <span class="s">'calmap'</span><span class="p">)))</span>
</code></pre></div></div>

<p>700일 동안 임의의 날짜에 할당된 임의의 부동 소수점 값으로 500개의 이벤트 데이터를 생성한다.<br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 데이터 생성
</span><span class="n">all_days</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">date_range</span><span class="p">(</span><span class="s">'1/15/2014'</span><span class="p">,</span> <span class="n">periods</span><span class="o">=</span><span class="mi">700</span><span class="p">,</span> <span class="n">freq</span><span class="o">=</span><span class="s">'D'</span><span class="p">)</span>
<span class="n">days</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">choice</span><span class="p">(</span><span class="n">all_days</span><span class="p">,</span> <span class="mi">500</span><span class="p">)</span>
<span class="n">events</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">Series</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="n">randn</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">days</span><span class="p">)),</span> <span class="n">index</span><span class="o">=</span><span class="n">days</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 기본적으로 yearplot은 첫번째 연도를 표시하고 하루의 값을 합산한다.
</span><span class="n">year</span> <span class="o">=</span> <span class="n">calmap</span><span class="p">.</span><span class="n">yearplot</span><span class="p">(</span><span class="n">events</span><span class="p">)</span>
<span class="n">year</span><span class="p">.</span><span class="n">figure</span><span class="p">.</span><span class="n">savefig</span><span class="p">(</span><span class="s">'yearplot.png'</span><span class="p">)</span>
</code></pre></div></div>

<p><img src="https://github.com/WoojinJeonkr/WoojinJeonkr.github.io/blob/main/assets/images/post_image/yearplot.png?raw=true" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># year 인수를 통해 어떤 연도를 표시할지 선택할 수 있다.
# 2015년에 대한 calendarmap 표현하기
</span><span class="n">year_2015</span> <span class="o">=</span> <span class="n">calmap</span><span class="p">.</span><span class="n">yearplot</span><span class="p">(</span><span class="n">events</span><span class="p">,</span> <span class="n">year</span><span class="o">=</span><span class="mi">2015</span><span class="p">)</span>
<span class="n">year_2015</span><span class="p">.</span><span class="n">figure</span><span class="p">.</span><span class="n">savefig</span><span class="p">(</span><span class="s">'yearplot_2015.png'</span><span class="p">)</span>
</code></pre></div></div>

<p><img src="https://github.com/WoojinJeonkr/WoojinJeonkr.github.io/blob/main/assets/images/post_image/yearplot_2015.png?raw=true" /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># calendarplot을 사용하여 모든 연도에 대한 데이터를 표시할 수도 있다.
# 2014년과 2015년의 데이터 calendarmap으로 표현하기
</span><span class="n">calendar</span> <span class="o">=</span> <span class="n">calmap</span><span class="p">.</span><span class="n">calendarplot</span><span class="p">(</span><span class="n">events</span><span class="p">,</span> <span class="n">monthticks</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span> <span class="n">daylabels</span><span class="o">=</span><span class="s">'MTWTFSS'</span><span class="p">,</span>
                    <span class="n">dayticks</span><span class="o">=</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">6</span><span class="p">],</span> <span class="n">cmap</span><span class="o">=</span><span class="s">'YlGn'</span><span class="p">,</span>
                    <span class="n">fillcolor</span><span class="o">=</span><span class="s">'grey'</span><span class="p">,</span> <span class="n">linewidth</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span>
                    <span class="n">fig_kws</span><span class="o">=</span><span class="nb">dict</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span> <span class="mi">4</span><span class="p">)))</span>
<span class="n">plt</span><span class="p">.</span><span class="n">tight_layout</span><span class="p">()</span>
<span class="n">plt</span><span class="p">.</span><span class="n">savefig</span><span class="p">(</span><span class="s">'calendarplot.png'</span><span class="p">)</span>
</code></pre></div></div>

<p><img src="https://github.com/WoojinJeonkr/WoojinJeonkr.github.io/blob/main/assets/images/post_image/calendarplot.png?raw=true" /></p>

<h2 id="4-참고-자료">4. 참고 자료</h2>
<ul>
  <li><a href="https://pythonhosted.org/calmap/">Calendar heatmaps from Pandas time series data</a></li>
  <li><a href="https://pypi.org/project/calmap/">pypi.org - calmap 0.0.9</a></li>
  <li><a href="https://towardsdatascience.com/create-githubs-style-contributions-plot-for-your-time-series-data-79df84ec93da">Create GitHub’s style contributions plot for your Time Series data</a></li>
</ul>]]></content><author><name>WoojinJeon</name></author><category term="Python" /><category term="Python" /><category term="calmap" /><category term="graph" /><category term="Calendarheatmap" /><summary type="html"><![CDATA[1. calmap 시계열 데이터를 히트맵으로 표현하는데 사용하는 라이브러리이다.]]></summary></entry></feed>